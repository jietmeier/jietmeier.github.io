{
    "version": "https://jsonfeed.org/version/1",
    "title": "jietmeier's blog • All posts by \"尺取\" tag",
    "description": "",
    "home_page_url": "http://jietmeier.xyz",
    "items": [
        {
            "id": "http://jietmeier.xyz/2020/10/rule/",
            "url": "http://jietmeier.xyz/2020/10/rule/",
            "title": "基础算法——尺取",
            "date_published": "2020-10-20T08:59:12.000Z",
            "content_html": "<h2 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h2>\n<p>首先，尺取法就是形如一把尺子的方法，去一块一块的截取你所需要的序列。</p>\n<blockquote>\n<p>给你一个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span>，然后给出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 个数，求这<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 个数中和大于等于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> 的最小连续序列。</p>\n</blockquote>\n<p>如果遍历每一种可能的序列，复杂度为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p>考虑对于整个序列，取其中一段 [l,r] 的序列</p>\n<p>如果序列满足要求，r++</p>\n<p>若不满足，l++</p>\n<p>在移动过程中记录最值</p>\n<p><img src=\"/image/post/rule/img1.png\" alt=\"img\"></p>\n<h2 id=\"代码实现\"><a class=\"markdownIt-Anchor\" href=\"#代码实现\">#</a> 代码实现</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e5</span>+<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i,t,l,r;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,s;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum,len;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[N];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;s);</span><br><span class=\"line\">        len=n+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(l=<span class=\"number\">1</span>,r=<span class=\"number\">1</span>;r&lt;=n;r++)        <span class=\"comment\">//设定左右区间初始化为1</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sum+=a[r];               <span class=\"comment\">//不断扩大右区间</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum&lt;s) <span class=\"keyword\">continue</span>;      <span class=\"comment\">//直到sum的值大于给出的s</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(sum-a[l]&gt;=s) sum-=a[l++];    <span class=\"comment\">//然后缩减区间，即扩大左区间，把 多余部分踢掉</span></span><br><span class=\"line\">                                                <span class=\"comment\">//使区间最小</span></span><br><span class=\"line\">            len=min(len,r-l+<span class=\"number\">1</span>);      <span class=\"comment\">//得到区间[l,r]，判断长度</span></span><br><span class=\"line\">        &#125;                            <span class=\"comment\">//往复</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(len==n+<span class=\"number\">1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,len);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><a href=\"https://vjudge.net/problem/CodeForces-279B#author=793437707\">Books</a> <a href=\"https://vjudge.net/problem/CodeForces-279B/origin\">CodeForces - 279B </a></p>\n<p>Bob 今天有 t 分钟的空闲时间，他来到商场准备用这些空闲时间给自己买一些衣服。<br>\n他来到一个自己经常购买的品牌店里面，店员给他推荐了 n 件衣服。我们把所有的衣服按照店员递给他的顺序从 1 到 n 编号，对于第 i 件衣服他试穿需要花掉 ai 分钟。<br>\nBob 决定随意选择从第 i 件衣服开始试穿，他会一件一件的从这件衣服开始试穿到第 n 件衣服，也就是说，他试穿完第 i 件后，紧接着会试穿第 i+1 件，然后是第 i+2 件，依此类推，直到试穿到第 n 件或者把他的空闲时间 t 用完为止。如果剩余的时间不够试穿某一件衣服，那他肯定就不会开始试穿那件衣服。<br>\n请输出 Bob 可以试穿的最多衣服数目。</p>\n<h3 id=\"输入\"><a class=\"markdownIt-Anchor\" href=\"#输入\">#</a> 输入</h3>\n<p>每组测试数据输入的第一行包含两个整数 n 和 t (1 ≤ n ≤ 10^5，1 ≤ t ≤ 10^9)，分别表示店员递给 Bob 的衣服数量和 Bob 具有的空闲时间。第二行包含 n 个整数 a1、a2、a3、…、an ( 1 ≤ ai ≤ 10^4 )，其中 ai 表示 Bob 试穿第 i 件衣服需要的时间。</p>\n<h3 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h3>\n<p>对于每组测试数据，输出 Bob 可以试穿的最多衣服数目。</p>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">尺取</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,t;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">100005</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>,l=<span class=\"number\">0</span>,r=<span class=\"number\">0</span>,maxn=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sum=a[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (r&lt;n)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sum&lt;=t)&#123;</span><br><span class=\"line\">            maxn = <span class=\"built_in\">std</span>::max(maxn,r-l+<span class=\"number\">1</span>);</span><br><span class=\"line\">            r++;</span><br><span class=\"line\">            sum+=a[r];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            sum-=a[l];</span><br><span class=\"line\">            l++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,maxn);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\">#</a> 参考文章</h2>\n<p><a href=\"https://cuccs.github.io/acm-wiki/basic-algorithm/two-pointers/\">https://cuccs.github.io/acm-wiki/basic-algorithm/two-pointers/</a></p>\n",
            "tags": [
                "尺取"
            ]
        }
    ]
}