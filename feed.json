{
    "version": "https://jsonfeed.org/version/1",
    "title": "jietmeier's blog",
    "description": "",
    "home_page_url": "http://jietmeier.xyz",
    "items": [
        {
            "id": "http://jietmeier.xyz/2020/10/autumnTrainingRound3/",
            "url": "http://jietmeier.xyz/2020/10/autumnTrainingRound3/",
            "title": "秋季训练——round3",
            "date_published": "2020-10-27T14:34:00.000Z",
            "content_html": "<h2 id=\"后半程gg\"><a class=\"markdownIt-Anchor\" href=\"#后半程gg\">#</a> 后半程 GG</h2>\n<p>虽然没有抢到一血，但前一个半小时还算顺利，正常做出了 6 个题。</p>\n<p>C 题 PE 了两次，没注意到空格的问题。</p>\n<p>剩下的 2 个小时，三个题，一道也没出。</p>\n<p>后来发现静下心来写还是能写出 F 的，确实不难。</p>\n<h2 id=\"a-试试新学的知识吧~\"><a class=\"markdownIt-Anchor\" href=\"#a-试试新学的知识吧~\">#</a> <a href=\"https://vjudge.net/problem/HDU-1559\">A - 试试新学的知识吧～</a></h2>\n<h3 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h3>\n<p>二维前缀和，很标准。</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">1005</span>][<span class=\"number\">1005</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T,m,n,x,y,maxs,s;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;T);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (T--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(a,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d%d&quot;</span>,&amp;m,&amp;n,&amp;x,&amp;y);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class=\"line\">                a[i][j] = a[i][j]+a[i<span class=\"number\">-1</span>][j]+a[i][j<span class=\"number\">-1</span>]-a[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        maxs=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = x; i &lt;= m; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = y; j &lt;= n; j++)&#123;</span><br><span class=\"line\">                s = a[i][j]-a[i-x][j]-a[i][j-y]+a[i-x][j-y];</span><br><span class=\"line\">                maxs = <span class=\"built_in\">std</span>::max(s,maxs);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,maxs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"b-可以先做做我哦\"><a class=\"markdownIt-Anchor\" href=\"#b-可以先做做我哦\">#</a> <a href=\"https://vjudge.net/problem/HDU-1234\">B - 可以先做做我哦！</a></h2>\n<h3 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\">#</a> 分析</h3>\n<p>时间戳可以先处理成秒的形式，后续比较的时候方便。 <code>t=3600*h+60*m+s</code></p>\n<p>结构体存好证件号码，进入时间，离开时间，然后排序就好了。</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">record</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> id[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> start;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> end;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmpS</span><span class=\"params\">(struct record a,struct record b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.start&lt;b.start;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmpE</span><span class=\"params\">(struct record a,struct record b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.end&gt;b.end;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N,M,h,m,s;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">record</span> <span class=\"title\">a</span>[10005];</span></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (N--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;M);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; M; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,&amp;a[i].id);</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d:%d:%d&quot;</span>,&amp;h,&amp;m,&amp;s);</span><br><span class=\"line\">            a[i].start = <span class=\"number\">3600</span>*h+<span class=\"number\">60</span>*m+s;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d:%d:%d&quot;</span>,&amp;h,&amp;m,&amp;s);</span><br><span class=\"line\">            a[i].end = <span class=\"number\">3600</span>*h+<span class=\"number\">60</span>*m+s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(a,a+M,cmpS);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s &quot;</span>,&amp;a[<span class=\"number\">0</span>].id);</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(a,a+M,cmpE);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,&amp;a[<span class=\"number\">0</span>].id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"c-我和b题差不多\"><a class=\"markdownIt-Anchor\" href=\"#c-我和b题差不多\">#</a> <a href=\"https://vjudge.net/problem/HDU-5702\">C - 我和 B 题差不多</a></h2>\n<h3 id=\"分析-3\"><a class=\"markdownIt-Anchor\" href=\"#分析-3\">#</a> 分析</h3>\n<p>结构体排序，注意结尾的空格。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">c</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> name[<span class=\"number\">15</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">c</span> <span class=\"title\">C</span>;</span></span><br><span class=\"line\">C a[<span class=\"number\">15</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(C a,C b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.cnt&gt;b.cnt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T,n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;T);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (T--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s %d&quot;</span>,a[i].name,&amp;a[i].cnt);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(a,a+n,cmp);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s&quot;</span>,a[i].name);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i!=n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n!=T<span class=\"number\">-1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"d-其实我不难\"><a class=\"markdownIt-Anchor\" href=\"#d-其实我不难\">#</a> <a href=\"https://vjudge.net/problem/HDU-6205\">D - 其实我不难</a></h2>\n<h3 id=\"分析-4\"><a class=\"markdownIt-Anchor\" href=\"#分析-4\">#</a> 分析</h3>\n<p><strong>&quot;其实我最难&quot;</strong></p>\n<p>给了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 堆牌，第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">i</span></span></span></span> 堆牌有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 张，第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">i</span></span></span></span> 堆牌的惩罚值为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">b_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。保证</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>a</mi><mi>i</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=1}^n{a_i}=\\sum_{i=1}^n{b_i}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>游戏过程是：</p>\n<p>​\t\t按照牌堆的顺序，每次拿起一堆牌，并翻开数量为惩罚值的牌数（手中所有的牌）。如果手中未翻开的牌张数小于惩罚值，那么游戏结束。</p>\n<p>​\t\t在游戏之前，可以任意次地把第一堆牌移动到最后。问经过多少次移动，可以使拿到的牌张数最多。如果张数一样多，输出最小的次数。</p>\n<p>对于第 j 次操作，游戏不停止的条件是</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>j</mi></munderover><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>j</mi></munderover><msub><mi>b</mi><mi>i</mi></msub><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=1}^j{a_i}-\\sum_{i=1}^j{b_i}\\geq0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.1364460000000003em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8587770000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.347113em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1364460000000003em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8587770000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.347113em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<p>我们令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">c_i=a_i-b_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">c_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的前缀和为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> ，则游戏不停止的条件为</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">s_i\\geq0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7859700000000001em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<p>由于</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>a</mi><mi>i</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=1}^n{a_i}=\\sum_{i=1}^n{b_i}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>所以</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>n</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">s_n=0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<p>遍历<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，每当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">s_i&lt;0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 时，更新答案 <code>ans=i</code> ，找到最后一个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">s_i&lt;0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>。从此往后的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 一定都大于 0。</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">1000005</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,b,ans;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (~<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n))&#123;</span><br><span class=\"line\">        ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,a+i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;b);</span><br><span class=\"line\">            a[i]-=b;</span><br><span class=\"line\">            a[i]+=a[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[i]&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                a[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">                ans=i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,ans);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"e-动动脑袋\"><a class=\"markdownIt-Anchor\" href=\"#e-动动脑袋\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-873B\">E - 动动脑袋</a></h2>\n<h3 id=\"分析-5\"><a class=\"markdownIt-Anchor\" href=\"#分析-5\">#</a> 分析</h3>\n<p>一个子字符串中，如果 1 和 0 的个数是相等的，那么这个字符串是 “平衡的”。</p>\n<p>找到一个最长的子字符串。</p>\n<p>把所有的 0 变成 - 1，整个字符串存入数组，求前缀和。</p>\n<p>在前缀和数组中，如果有两个位置的数相等，那么说明这两个位置之间（前开后闭）的子字符串是 “平衡的”。</p>\n<p>如果前缀和为 0，说明从开头到现在都是 “平衡的”。</p>\n<p>在计算前缀和的过程中，记录每个数字第一次出现的位置。如果当前数字出现过，则计算当前位置与第一次出现之间的距离。</p>\n<p>最后得到一个最大的距离，就是答案。</p>\n<p>可以利用 STL 中的 map，来记录位置。也可以用桶排序的思想，开一个 2e5 大小的数组来记录位置。</p>\n<h3 id=\"代码-5\"><a class=\"markdownIt-Anchor\" href=\"#代码-5\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">char</span> s[<span class=\"number\">1000005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">1000005</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">map</span>&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt;inx;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,s+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i]==<span class=\"string\">&#x27;0&#x27;</span>)&#123;</span><br><span class=\"line\">            a[i]=a[i<span class=\"number\">-1</span>]<span class=\"number\">-1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            a[i]=a[i<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    a[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (inx[a[i]])&#123;</span><br><span class=\"line\">            ans=<span class=\"built_in\">std</span>::max(ans,i-inx[a[i]]);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            inx[a[i]]=i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a[i]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            ans=<span class=\"built_in\">std</span>::max(ans,i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,ans);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"f-锻炼一下码力\"><a class=\"markdownIt-Anchor\" href=\"#f-锻炼一下码力\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-304B\">F - 锻炼一下码力</a></h2>\n<h3 id=\"分析-6\"><a class=\"markdownIt-Anchor\" href=\"#分析-6\">#</a> 分析</h3>\n<p>计算两个日期之间的天数。</p>\n<p>不难理解，思路也不难，但是写起来容易错…</p>\n<p>想了想，还是先计算 1900 年 1 月 1 日到当前日期的天数，然后两个日期再相减，这样写起来比较直观，不容易出错。</p>\n<h3 id=\"代码-6\"><a class=\"markdownIt-Anchor\" href=\"#代码-6\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> dMonth[<span class=\"number\">15</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">31</span>,<span class=\"number\">28</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>&#125;; <span class=\"comment\">// 记录每月的天数</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Date</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> year;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> month;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> day;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> __daysFrom19s=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Date</span> <span class=\"title\">date</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> __init__(date *a)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d:%d:%d&quot;</span>,&amp;a-&gt;year,&amp;a-&gt;month,&amp;a-&gt;day);</span><br><span class=\"line\">    a-&gt;__daysFrom19s=<span class=\"number\">365</span>*(a-&gt;year<span class=\"number\">-1900</span>); <span class=\"comment\">// 先算1900年到去年的天数(不含闰年)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1900</span>; i &lt; a-&gt;year; i++)&#123; <span class=\"comment\">// 加上闰年的2月29日</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i%<span class=\"number\">4</span>==<span class=\"number\">0</span> &amp;&amp; i%<span class=\"number\">100</span>!=<span class=\"number\">0</span> || i%<span class=\"number\">400</span>==<span class=\"number\">0</span>) a-&gt;__daysFrom19s++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a-&gt;month&gt;<span class=\"number\">2</span>)&#123; <span class=\"comment\">// 今年月份大于2 且为闰年， 加上今年的2月29日</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a-&gt;year%<span class=\"number\">4</span>==<span class=\"number\">0</span> &amp;&amp; a-&gt;year%<span class=\"number\">100</span>!=<span class=\"number\">0</span> || a-&gt;year%<span class=\"number\">400</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            a-&gt;__daysFrom19s++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; a-&gt;month; i++)&#123; <span class=\"comment\">// 加上今年的月份(到上个月)</span></span><br><span class=\"line\">        a-&gt;__daysFrom19s+=dMonth[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    a-&gt;__daysFrom19s+=a-&gt;day; <span class=\"comment\">// 这个月的天数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    date a,b;</span><br><span class=\"line\">    __init__(&amp;a);</span><br><span class=\"line\">    __init__(&amp;b);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,<span class=\"built_in\">abs</span>(a.__daysFrom19s-b.__daysFrom19s));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"g-认真听课都能过\"><a class=\"markdownIt-Anchor\" href=\"#g-认真听课都能过\">#</a> <a href=\"https://vjudge.net/problem/51Nod-1081\">G - 认真听课都能过</a></h2>\n<h3 id=\"分析-7\"><a class=\"markdownIt-Anchor\" href=\"#分析-7\">#</a> 分析</h3>\n<p>查询字段和，前缀和的基础应用。</p>\n<p>注意数据范围超出了 int。</p>\n<h3 id=\"代码-7\"><a class=\"markdownIt-Anchor\" href=\"#代码-7\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> N,Q,l,b;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a[<span class=\"number\">50005</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">        a[i] += a[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;Q);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; Q; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;b,&amp;l);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>,a[b+l<span class=\"number\">-1</span>]-a[b<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"h-虽然我在后面但我是个签到题\"><a class=\"markdownIt-Anchor\" href=\"#h-虽然我在后面但我是个签到题\">#</a> <a href=\"https://vjudge.net/problem/ZOJ-2987\">H - 虽然我在后面但我是个签到题</a></h2>\n<h3 id=\"分析-8\"><a class=\"markdownIt-Anchor\" href=\"#分析-8\">#</a> 分析</h3>\n<p>去掉字符串中第 n 个位置。没啥好分析的。</p>\n<h3 id=\"代码-8\"><a class=\"markdownIt-Anchor\" href=\"#代码-8\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N,M;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> l;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> n[<span class=\"number\">85</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %s&quot;</span>,&amp;l,n);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; n[i]!=<span class=\"string\">&#x27;\\0&#x27;</span>; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i!=(l<span class=\"number\">-1</span>))&#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>,n[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"i-同上\"><a class=\"markdownIt-Anchor\" href=\"#i-同上\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1300A\">I - 同上</a></h2>\n<h3 id=\"分析-9\"><a class=\"markdownIt-Anchor\" href=\"#分析-9\">#</a> 分析</h3>\n<p>把所有的 0 都加一，如果和为 0，再加 1。</p>\n<h3 id=\"代码-9\"><a class=\"markdownIt-Anchor\" href=\"#代码-9\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t,n,a,s,cnt;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        s=<span class=\"number\">0</span>;</span><br><span class=\"line\">        cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a==<span class=\"number\">0</span>) cnt++;</span><br><span class=\"line\">            s+=a;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        s+=cnt;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s==<span class=\"number\">0</span>) cnt++;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,cnt);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "C/C++",
                "ACM新生队"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/10/autumnTrainingRound2/",
            "url": "http://jietmeier.xyz/2020/10/autumnTrainingRound2/",
            "title": "秋季训练——round2",
            "date_published": "2020-10-25T11:26:00.000Z",
            "content_html": "<h2 id=\"运气好依旧不改菜鸡的本质\"><a class=\"markdownIt-Anchor\" href=\"#运气好依旧不改菜鸡的本质\">#</a> 运气好依旧不改菜鸡的本质</h2>\n<p>周三的课，跟党课二选一，那也没办法还是要去上党课的。于是就拿着电脑去党课上写代码了。</p>\n<p>这次做题比较顺利，先秒了 H、C、E，抢了三个一血。</p>\n<p>D 题当时没有思路，后来想想也就会做了。</p>\n<p>J 题当场还没来得及看。</p>\n<p>按顺序分析一下吧。</p>\n<h2 id=\"a-football-cup\"><a class=\"markdownIt-Anchor\" href=\"#a-football-cup\">#</a> <a href=\"https://vjudge.net/problem/Gym-102163D\">A - Football Cup</a></h2>\n<h3 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h3>\n<p>非常贱的题面，就是判断两个队的胜负。考英语阅读和手速。</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t,b,h;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;b,&amp;h);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (b&gt;h)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Bashar\\n&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (h&gt;b)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hamada\\n&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Iskandar\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"b-fix-you\"><a class=\"markdownIt-Anchor\" href=\"#b-fix-you\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1391B\">B - Fix You</a></h2>\n<h3 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\">#</a> 分析</h3>\n<p>一个传送带阵列，只能向下或右，最终要把每个位置上放的物品都传送到右下角。</p>\n<p>想让物品不掉出去，只要最下边一行全朝右，最右边一列全朝下就可以。</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t,n,m,cnt;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> a[<span class=\"number\">105</span>][<span class=\"number\">105</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">            gets(a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n,j=<span class=\"number\">0</span>; j &lt; m; j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[i][j]==<span class=\"string\">&#x27;D&#x27;</span>)&#123;</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>,j=m<span class=\"number\">-1</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[i][j]==<span class=\"string\">&#x27;R&#x27;</span>)&#123;</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,cnt);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"c-remove-smallest\"><a class=\"markdownIt-Anchor\" href=\"#c-remove-smallest\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1399A\">C - Remove Smallest</a></h2>\n<h3 id=\"分析-3\"><a class=\"markdownIt-Anchor\" href=\"#分析-3\">#</a> 分析</h3>\n<p>一个数组中，可以删除绝对值小于等于 1 的两个数其中的最小值。</p>\n<p>显然，只要整个数组排序后，相邻两元素之差不超过 1 就可以最终只剩下一个数。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t,n,a[<span class=\"number\">55</span>],flag;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(a,a+n);</span><br><span class=\"line\">        flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[i]-a[i<span class=\"number\">-1</span>]&lt;=<span class=\"number\">1</span>)&#123;   </span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (flag)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;YES\\n&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;NO\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"d-common-prefixes\"><a class=\"markdownIt-Anchor\" href=\"#d-common-prefixes\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1384A\">D - Common Prefixes</a></h2>\n<h3 id=\"分析-4\"><a class=\"markdownIt-Anchor\" href=\"#分析-4\">#</a> 分析</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> 代表相邻两个字符串的公共前缀长度。</p>\n<p>给<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 个间隔，也就是有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个字符串。</p>\n<p>易知字符串的长度要大于 s 的长度，为了简化问题，使所有字符串长度等于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">s_{max}+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<p>先输出一个字符串 <code>str</code> ，之后在第 <code>i</code>  次修改 <code>str[s[i]]</code> ，使前<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> 个字符是他们的公共前缀。</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">char</span> str[<span class=\"number\">105</span>]=<span class=\"string\">&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">strout</span><span class=\"params\">(<span class=\"keyword\">char</span> *str,<span class=\"keyword\">int</span> len)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>,*(str+i));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t,n,a[<span class=\"number\">105</span>]=&#123;<span class=\"number\">0</span>&#125;,maxn;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        maxn=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">            maxn = <span class=\"built_in\">std</span>::max(maxn,a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        strout(str,maxn+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            str[a[i]]+=<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (str[a[i]]&gt;<span class=\"number\">122</span>) str[a[i]] = <span class=\"number\">97</span>;</span><br><span class=\"line\">            strout(str,maxn+<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"e-reachable-numbers\"><a class=\"markdownIt-Anchor\" href=\"#e-reachable-numbers\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1157A\">E - Reachable Numbers</a></h2>\n<h3 id=\"分析-5\"><a class=\"markdownIt-Anchor\" href=\"#分析-5\">#</a> 分析</h3>\n<p>对于一个个位不为 0 的数，每次操作 + 1。</p>\n<p>如果个位为 0，则删去末尾所有的 0。</p>\n<p>问一个数字经过多次操作，最多能达到的数字个数是多少。</p>\n<p>简单分析后发现，对于这个数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 的每一个数位<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">n_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (最高位除外)，能操作的次数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>9</mn><mo>−</mo><msub><mi>n</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">9-n_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>由于操作到只剩最高位时，会一直在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mtext> </mtext><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">1~10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace nobreak\"> </span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span> 之间循环，所以最高位能操作的次数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">9</span></span></span></span>。</p>\n<p>对于位数大于 1 的数字，还会包括其本身。</p>\n<p>所以初始的次数为 10 (一位数为 9)。</p>\n<h3 id=\"代码-5\"><a class=\"markdownIt-Anchor\" href=\"#代码-5\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> n[<span class=\"number\">15</span>],len,cnt=<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,n);</span><br><span class=\"line\">    len = <span class=\"built_in\">strlen</span>(n);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        cnt=<span class=\"number\">9</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; len; i++)&#123;</span><br><span class=\"line\">        n[i]-=<span class=\"number\">48</span>;</span><br><span class=\"line\">        cnt+=(<span class=\"number\">9</span>-n[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,cnt);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"f-lucky-7-in-the-pocket\"><a class=\"markdownIt-Anchor\" href=\"#f-lucky-7-in-the-pocket\">#</a> <a href=\"https://vjudge.net/problem/ZOJ-4106\">F - Lucky 7 in the Pocket</a></h2>\n<h3 id=\"分析-6\"><a class=\"markdownIt-Anchor\" href=\"#分析-6\">#</a> 分析</h3>\n<p>幸运数字是能整除<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>7</mn></mrow><annotation encoding=\"application/x-tex\">7</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">7</span></span></span></span> 且不能整除<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span> 的数。</p>\n<p>找到大于等于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 的最小幸运数字。</p>\n<h3 id=\"代码-6\"><a class=\"markdownIt-Anchor\" href=\"#代码-6\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t,n;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        m = (<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(n/<span class=\"number\">7.0</span>);</span><br><span class=\"line\">        m *= <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (m%<span class=\"number\">4</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            m+=<span class=\"number\">7</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,m); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"g-help-chef-gerasim\"><a class=\"markdownIt-Anchor\" href=\"#g-help-chef-gerasim\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-99B\">G - Help Chef Gerasim</a></h2>\n<h3 id=\"分析-7\"><a class=\"markdownIt-Anchor\" href=\"#分析-7\">#</a> 分析</h3>\n<p>有 n 杯完全一样多的果汁，问能不能只经过一次操作（一杯倒入另一杯）成为当前的状态。输出操作的方式。</p>\n<p>如果是正确的操作后状态，有且仅有两杯果汁和其他的不一样，而且两杯取算术平均恰好等于其他的果汁。</p>\n<p>先求所有果汁的算术平均，验证多的和少的那一杯，如果不一样的杯数大于 2 或等于 1，则无法恢复。</p>\n<p>如果两杯果汁求平均不等于正确的数量，则无法恢复。</p>\n<p>如果全部果汁一样多，则说明没经过操作。</p>\n<p>剩下的情况就是能恢复的状态。按照刚才记录的最大和最小输出即可。</p>\n<p>(最后临结束 44 秒钟交上的，过于着急把 min 和 max 写反了，再改前边的就来不及了，为了快写完后边只能反着写 233333)</p>\n<h3 id=\"代码-7\"><a class=\"markdownIt-Anchor\" href=\"#代码-7\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,a[<span class=\"number\">1005</span>],s=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">float</span> ave;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">        s+=a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ave = <span class=\"number\">1.0</span>*s/n;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> min,max,cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n &amp;&amp; cnt&lt;=<span class=\"number\">2</span>; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ave&lt;a[i])&#123;</span><br><span class=\"line\">            min=i;</span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ave&gt;a[i])&#123;</span><br><span class=\"line\">            max=i;</span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> flag ;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">int</span>)ave*n==s)&#123;</span><br><span class=\"line\">        flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cnt==<span class=\"number\">1</span> || cnt &gt; <span class=\"number\">2</span> || flag==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Unrecoverable configuration.\\n&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cnt ==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Exemplary pages.\\n&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d ml. from cup #%d to cup #%d.&quot;</span>,(<span class=\"keyword\">int</span>)ave-a[max],max+<span class=\"number\">1</span>,min+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"h-game\"><a class=\"markdownIt-Anchor\" href=\"#h-game\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-984A\">H - Game</a></h2>\n<h3 id=\"分析-8\"><a class=\"markdownIt-Anchor\" href=\"#分析-8\">#</a> 分析</h3>\n<p>去掉最大的一个数，再去掉最小的一个数，如此往复。</p>\n<p>最终留下的是排序后在中间的数。</p>\n<h3 id=\"代码-8\"><a class=\"markdownIt-Anchor\" href=\"#代码-8\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,a[<span class=\"number\">1005</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(a,a+n);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n%<span class=\"number\">2</span>==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,a[n/<span class=\"number\">2</span>]);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,a[n/<span class=\"number\">2</span><span class=\"number\">-1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"i-sushi-for-two\"><a class=\"markdownIt-Anchor\" href=\"#i-sushi-for-two\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1138A\">I - Sushi for Two</a></h2>\n<h3 id=\"分析-9\"><a class=\"markdownIt-Anchor\" href=\"#分析-9\">#</a> 分析</h3>\n<p>寻找一个 连续 1、连续 2 的最长子序列。</p>\n<p>先遍历一遍，记录下每个 1、2 出现的次数。</p>\n<p>然后寻找相邻两个最小值的最大值。</p>\n<h3 id=\"代码-9\"><a class=\"markdownIt-Anchor\" href=\"#代码-9\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,t[<span class=\"number\">100005</span>]=&#123;<span class=\"number\">0</span>&#125;,cnt=<span class=\"number\">1</span>,max=<span class=\"number\">0</span>,lastN,minN;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    t[n+<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t[i]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t[i]==t[i<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            minN=<span class=\"built_in\">std</span>::min(cnt,lastN);</span><br><span class=\"line\">            max=<span class=\"built_in\">std</span>::max(max,minN);</span><br><span class=\"line\">            lastN=cnt;</span><br><span class=\"line\">            cnt=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    minN=<span class=\"built_in\">std</span>::min(cnt,lastN);</span><br><span class=\"line\">    max=<span class=\"built_in\">std</span>::max(max,minN);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,max*<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"j-fishing-master\"><a class=\"markdownIt-Anchor\" href=\"#j-fishing-master\">#</a> <a href=\"https://vjudge.net/problem/HDU-6709\">J - Fishing Master</a></h2>\n<h3 id=\"分析-10\"><a class=\"markdownIt-Anchor\" href=\"#分析-10\">#</a> 分析</h3>\n<p>钓鱼。</p>\n<p>在钓鱼的时候动作不能打断，相同时刻只能煮一条鱼。</p>\n<p>简单分析后可以发现，如果所有煮鱼的时间都大于钓鱼的时间，那么我们需要花费钓第一条鱼的时间 + 煮所有鱼的时间。</p>\n<p>除此之外所有的时间都是浪费的。</p>\n<p>我们要尽可能减小浪费的时间。</p>\n<p>先假设不浪费时间，算出可以钓多少鱼。</p>\n<p>然后剩下的鱼浪费一点时间去钓。</p>\n<p>浪费的时间是煮鱼的时间对钓鱼的时间取余，以这个余数为关键字，对煮鱼时间排序，先浪费较少的时间。</p>\n<p>直到条数足够为止。</p>\n<h3 id=\"代码-10\"><a class=\"markdownIt-Anchor\" href=\"#代码-10\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\">ll t[<span class=\"number\">100005</span>],b[<span class=\"number\">100005</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(ll a,ll b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a&gt;b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;T);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(T--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">        ll k;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %lld&quot;</span>,&amp;n,&amp;k);</span><br><span class=\"line\">        ll s=k;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld&quot;</span>,&amp;t[i]);</span><br><span class=\"line\">            s+=t[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(t+<span class=\"number\">1</span>,t+n+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            cnt+=t[i]/k;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cnt&gt;=n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>,s);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">                b[i]=t[i]%k;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">std</span>::sort(b+<span class=\"number\">1</span>,b+n+<span class=\"number\">1</span>,cmp);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n<span class=\"number\">-1</span>-cnt;i++)&#123;</span><br><span class=\"line\">                s+=k-b[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>,s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "C/C++",
                "ACM新生队"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/10/rule/",
            "url": "http://jietmeier.xyz/2020/10/rule/",
            "title": "基础算法——尺取",
            "date_published": "2020-10-20T08:59:12.000Z",
            "content_html": "<h2 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h2>\n<p>首先，尺取法就是形如一把尺子的方法，去一块一块的截取你所需要的序列。</p>\n<blockquote>\n<p>给你一个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span>，然后给出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 个数，求这<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 个数中和大于等于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> 的最小连续序列。</p>\n</blockquote>\n<p>如果遍历每一种可能的序列，复杂度为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p>考虑对于整个序列，取其中一段 [l,r] 的序列</p>\n<p>如果序列满足要求，r++</p>\n<p>若不满足，l++</p>\n<p>在移动过程中记录最值</p>\n<p><img src=\"/image/post/rule/img1.png\" alt=\"img\"></p>\n<h2 id=\"代码实现\"><a class=\"markdownIt-Anchor\" href=\"#代码实现\">#</a> 代码实现</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e5</span>+<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i,t,l,r;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,s;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum,len;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[N];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;s);</span><br><span class=\"line\">        len=n+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(l=<span class=\"number\">1</span>,r=<span class=\"number\">1</span>;r&lt;=n;r++)        <span class=\"comment\">//设定左右区间初始化为1</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sum+=a[r];               <span class=\"comment\">//不断扩大右区间</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum&lt;s) <span class=\"keyword\">continue</span>;      <span class=\"comment\">//直到sum的值大于给出的s</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(sum-a[l]&gt;=s) sum-=a[l++];    <span class=\"comment\">//然后缩减区间，即扩大左区间，把 多余部分踢掉</span></span><br><span class=\"line\">                                                <span class=\"comment\">//使区间最小</span></span><br><span class=\"line\">            len=min(len,r-l+<span class=\"number\">1</span>);      <span class=\"comment\">//得到区间[l,r]，判断长度</span></span><br><span class=\"line\">        &#125;                            <span class=\"comment\">//往复</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(len==n+<span class=\"number\">1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,len);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><a href=\"https://vjudge.net/problem/CodeForces-279B#author=793437707\">Books</a> <a href=\"https://vjudge.net/problem/CodeForces-279B/origin\">CodeForces - 279B </a></p>\n<p>Bob 今天有 t 分钟的空闲时间，他来到商场准备用这些空闲时间给自己买一些衣服。<br>\n他来到一个自己经常购买的品牌店里面，店员给他推荐了 n 件衣服。我们把所有的衣服按照店员递给他的顺序从 1 到 n 编号，对于第 i 件衣服他试穿需要花掉 ai 分钟。<br>\nBob 决定随意选择从第 i 件衣服开始试穿，他会一件一件的从这件衣服开始试穿到第 n 件衣服，也就是说，他试穿完第 i 件后，紧接着会试穿第 i+1 件，然后是第 i+2 件，依此类推，直到试穿到第 n 件或者把他的空闲时间 t 用完为止。如果剩余的时间不够试穿某一件衣服，那他肯定就不会开始试穿那件衣服。<br>\n请输出 Bob 可以试穿的最多衣服数目。</p>\n<h3 id=\"输入\"><a class=\"markdownIt-Anchor\" href=\"#输入\">#</a> 输入</h3>\n<p>每组测试数据输入的第一行包含两个整数 n 和 t (1 ≤ n ≤ 10^5，1 ≤ t ≤ 10^9)，分别表示店员递给 Bob 的衣服数量和 Bob 具有的空闲时间。第二行包含 n 个整数 a1、a2、a3、…、an ( 1 ≤ ai ≤ 10^4 )，其中 ai 表示 Bob 试穿第 i 件衣服需要的时间。</p>\n<h3 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h3>\n<p>对于每组测试数据，输出 Bob 可以试穿的最多衣服数目。</p>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">尺取</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,t;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">100005</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>,l=<span class=\"number\">0</span>,r=<span class=\"number\">0</span>,maxn=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sum=a[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (r&lt;n)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sum&lt;=t)&#123;</span><br><span class=\"line\">            maxn = <span class=\"built_in\">std</span>::max(maxn,r-l+<span class=\"number\">1</span>);</span><br><span class=\"line\">            r++;</span><br><span class=\"line\">            sum+=a[r];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            sum-=a[l];</span><br><span class=\"line\">            l++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,maxn);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\">#</a> 参考文章</h2>\n<p><a href=\"https://cuccs.github.io/acm-wiki/basic-algorithm/two-pointers/\">https://cuccs.github.io/acm-wiki/basic-algorithm/two-pointers/</a></p>\n",
            "tags": [
                "尺取"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/10/autumnTrainingRound1/",
            "url": "http://jietmeier.xyz/2020/10/autumnTrainingRound1/",
            "title": "秋季训练——round1",
            "date_published": "2020-10-15T09:05:00.000Z",
            "content_html": "<h2 id=\"我太菜了\"><a class=\"markdownIt-Anchor\" href=\"#我太菜了\">#</a> 我太菜了</h2>\n<p>第一次跟 ACM 新生队打训练赛，感觉自己之前白学了。</p>\n<p>前四题是熟悉输入输出的，<s>纯考验敲代码速度</s>，没有抢到一血，可惜了</p>\n<p>E 题最开始看起来难得没法做，后来换题了。</p>\n<p>E、F、H、I、J 五个题按说都应该能做出来，写 I 题的时候脑抽了，浪费了近 1 小时。导致后来 E 也没时间做了。</p>\n<p>G 是一个脑筋急转弯的题，不过还真有人能猜出来 2333</p>\n<p><strong>心态很重要</strong></p>\n<p>按照做题顺序分析一下后面几个题</p>\n<h2 id=\"f-new-year-garland\"><a class=\"markdownIt-Anchor\" href=\"#f-new-year-garland\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1279A\">F - New Year Garland</a></h2>\n<h3 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h3>\n<p>三个颜色的珠子排起来，想要相邻珠子不同色，那么个数最多的珠子不能超过<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>n</mi><mn>2</mn></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\frac{n}{2}+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.040392em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.695392em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个。</p>\n<p>判断较少的两个和大于等于较大的 - 1 即可 (类似于三角不等式)。</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,i,a[<span class=\"number\">5</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>,&amp;a[<span class=\"number\">0</span>],&amp;a[<span class=\"number\">1</span>],&amp;a[<span class=\"number\">2</span>]);</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(a,a+<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a[<span class=\"number\">0</span>]+a[<span class=\"number\">1</span>]&gt;=a[<span class=\"number\">2</span>]<span class=\"number\">-1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Yes\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;No\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"h-number-of-apartments\"><a class=\"markdownIt-Anchor\" href=\"#h-number-of-apartments\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1430A\">H - Number of Apartments</a></h2>\n<h3 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\">#</a> 分析</h3>\n<p>共有三种公寓：3 窗、5 窗、7 窗</p>\n<p>给定一个窗户数，找到一组符合的公寓数。</p>\n<p>鉴于数据量很小，直接暴力</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t, n, sum,flag;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; t; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> a = <span class=\"number\">0</span>; a*<span class=\"number\">3</span> &lt;= n; a++)&#123;</span><br><span class=\"line\">            sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> b = <span class=\"number\">0</span>; b*<span class=\"number\">5</span> &lt;= n; b++)&#123;</span><br><span class=\"line\">                sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">                flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> c = <span class=\"number\">0</span>; sum &lt;= n; c++)&#123;</span><br><span class=\"line\">                    sum=(<span class=\"number\">3</span>*a + <span class=\"number\">5</span>*b + <span class=\"number\">7</span>*c);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (sum == n)&#123;</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d %d\\n&quot;</span>,a,b,c);</span><br><span class=\"line\">                        flag =<span class=\"number\">1</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;               </span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (flag) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (flag) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!flag) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-1\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"i-barrels\"><a class=\"markdownIt-Anchor\" href=\"#i-barrels\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1430B\">I - Barrels</a></h2>\n<h3 id=\"分析-3\"><a class=\"markdownIt-Anchor\" href=\"#分析-3\">#</a> 分析</h3>\n<p>给了一排水桶，初始盛有水。每次操作可以把水从一个桶倒进另一个桶。</p>\n<p>桶容量无限大，求在 k 次操作之后，水量可能的最大差值。</p>\n<p>想要让差值最大，那么要使最多水的桶里的水尽可能多（全往这里边倒），使最少水的桶里的水尽可能少（空桶）。</p>\n<p>那么先把初始水量排序</p>\n<p>从第二多的桶开始，往水最多的桶里倒。</p>\n<p>由于至少操作一次，最大的水量就是要求的最大差值。</p>\n<p>如果只有一个桶，那么无法操作，差值为 0。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,k;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a[<span class=\"number\">200005</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(a,a+n);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;0\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> inx=n<span class=\"number\">-2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; i++)&#123;</span><br><span class=\"line\">            a[n<span class=\"number\">-1</span>]+=a[inx];</span><br><span class=\"line\">            inx--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>,a[n<span class=\"number\">-1</span>]);  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"j-numbers-on-whiteboard\"><a class=\"markdownIt-Anchor\" href=\"#j-numbers-on-whiteboard\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1430C\">J - Numbers on Whiteboard</a></h2>\n<h3 id=\"分析-4\"><a class=\"markdownIt-Anchor\" href=\"#分析-4\">#</a> 分析</h3>\n<p>要使结果尽可能小，那么经过每一次操作之后的数字要尽可能小。</p>\n<p>当 a+b 为奇数时，除二之后四舍五入会使结果变大。</p>\n<p>所以 a+b 只能为偶数。</p>\n<p>每次取最大的两个数。</p>\n<p>循环操作下去，发现只有第二次取得两个数相等，其他的差全为 2，且每次 - 1</p>\n<p>最后理想的结果应该是 2</p>\n<p>对于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n=2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 的情况单独判断</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t, n, inx,i,a[<span class=\"number\">200005</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;2\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1 2\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d\\n&quot;</span>,n<span class=\"number\">-2</span>,n);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d\\n&quot;</span>,n<span class=\"number\">-1</span>,n<span class=\"number\">-1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n<span class=\"number\">-3</span>; i &gt;= <span class=\"number\">1</span>; i--)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d\\n&quot;</span>,i,i+<span class=\"number\">2</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"g-neat-words\"><a class=\"markdownIt-Anchor\" href=\"#g-neat-words\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1145F\">G - Neat Words</a></h2>\n<h3 id=\"分析-5\"><a class=\"markdownIt-Anchor\" href=\"#分析-5\">#</a> 分析</h3>\n<p>整洁的单词</p>\n<p>整洁指的是，如果一个单词里的字母全都是直的 or 全都是弯的，那么它就是整洁的。</p>\n<p>比如</p>\n<p>CUC，字母全都是弯的，它就是整洁的。</p>\n<p>NEAT，字母全都是直的，它就是整洁的。</p>\n<p>YES，字母有弯有直，它就不整洁。</p>\n<p>缺乏想象力，反正我是没猜出来。。。</p>\n<p>那么只需要一个长度为 26 的 bool 数组就能解决了，分别对应 26 个字母的直 or 弯</p>\n<p><strong><s>直的是 1，弯的是 0</s></strong></p>\n<p>验证字母的状态是否相同</p>\n<h3 id=\"代码-5\"><a class=\"markdownIt-Anchor\" href=\"#代码-5\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">26</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;,flag,ans=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> w[<span class=\"number\">15</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,w);</span><br><span class=\"line\">    flag = a[w[<span class=\"number\">0</span>]<span class=\"number\">-65</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;w[i]!=<span class=\"string\">&#x27;\\0&#x27;</span>; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a[w[i]<span class=\"number\">-65</span>]!=flag)&#123;</span><br><span class=\"line\">            ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ans) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;YES\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;NO\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"e-milk\"><a class=\"markdownIt-Anchor\" href=\"#e-milk\">#</a> <a href=\"https://vjudge.net/problem/HDU-1070\">E - Milk</a></h2>\n<h3 id=\"分析-6\"><a class=\"markdownIt-Anchor\" href=\"#分析-6\">#</a> 分析</h3>\n<p>一盒牛奶最多能喝 5 天，一天 200ml，也就是说，不过这盒奶容量有多大，只有 1000ml 有用。</p>\n<p>能喝的天数最多为 5 天。</p>\n<p>每天的单价就是总价钱 / 天数</p>\n<p>以单价为关键字排序，单价相等的给容量大的那个</p>\n<p>借用 python 中的构造方法__init__()，在每次输入数据之后初始化类变量，求得需要的排序关键字__price</p>\n<p>然后排序即可</p>\n<p>这么写虽然浪费了一些性能和空间，不过好在数据量不大。</p>\n<p>看起来比较舒服，不容易出错</p>\n<h3 id=\"代码-6\"><a class=\"markdownIt-Anchor\" href=\"#代码-6\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">MILK</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> s[<span class=\"number\">105</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> p;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> __v;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> __day;</span><br><span class=\"line\">    <span class=\"keyword\">float</span> __price;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">void</span> __init__(struct MILK *m)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s%d%d&quot;</span>,&amp;m-&gt;s,&amp;m-&gt;p,&amp;m-&gt;v);</span><br><span class=\"line\">    m-&gt;__day = m-&gt;v/<span class=\"number\">200</span>;</span><br><span class=\"line\">    m-&gt;__v=m-&gt;v;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m-&gt;__day&gt;<span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">        m-&gt;__day=<span class=\"number\">5</span>;</span><br><span class=\"line\">        m-&gt;__v=<span class=\"number\">1000</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    m-&gt;__price = (<span class=\"keyword\">float</span>)m-&gt;p/m-&gt;__day;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(struct MILK a,struct MILK b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.__price&lt;b.__price)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.__price==b.__price)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.v&gt;b.v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">MILK</span> <span class=\"title\">milk</span>[105];</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> t,n;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> day;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            __init__(&amp;milk[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(milk,milk+n,cmp);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,milk[<span class=\"number\">0</span>].s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "C/C++",
                "ACM新生队"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/10/sort/",
            "url": "http://jietmeier.xyz/2020/10/sort/",
            "title": "排序算法",
            "date_published": "2020-10-13T05:28:00.000Z",
            "content_html": "<h3 id=\"归并排序\"><a class=\"markdownIt-Anchor\" href=\"#归并排序\">#</a> 归并排序</h3>\n<h4 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h4>\n<p>对于一个长度为 n 的数组，先分成两个长度为 n/2 的子数组，对于两个数组分别排序，排好序后再合并。</p>\n<h4 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">递归的归并排序</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">100005</span>];</span><br><span class=\"line\"><span class=\"comment\">// int cnt=0;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span> *first, <span class=\"keyword\">int</span> *last)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *midInx=first + (last-first)/<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *i,*j,flag,iFull;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *tempArray = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[last-first+<span class=\"number\">1</span>]; <span class=\"comment\">// 开一个临时数组</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (last!=first)&#123; <span class=\"comment\">// 当序列中超过1个数时↓       </span></span><br><span class=\"line\">        <span class=\"comment\">// 分成两个子序列,分别对两个子序列排序</span></span><br><span class=\"line\">        sort(first,midInx);</span><br><span class=\"line\">        sort(midInx+<span class=\"number\">1</span>,last);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//合并两个子序列↓</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = first, j = midInx+<span class=\"number\">1</span>, flag=<span class=\"number\">0</span>; i &lt;= midInx &amp;&amp; j &lt;= last; flag++)&#123; </span><br><span class=\"line\">        <span class=\"comment\">// 较小的数装入tempArray，地址自增</span></span><br><span class=\"line\">        *(tempArray+flag)=*i&lt;*j?*i++:*j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    iFull=i==midInx+<span class=\"number\">1</span>?<span class=\"number\">1</span>:<span class=\"number\">0</span>; <span class=\"comment\">// 标记i是否出界</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (flag&lt;=last-first)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 把剩下的数装入tempArray</span></span><br><span class=\"line\">        *(tempArray+flag++)=iFull?*j++:*i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = first,j=tempArray; i &lt;= last; i++,j++)&#123; <span class=\"comment\">// 把tempArray中的数copy到[first, last]中</span></span><br><span class=\"line\">        *i=*j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> []tempArray;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(a,a+N<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N<span class=\"number\">-1</span>; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,a[N<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"快速排序\"><a class=\"markdownIt-Anchor\" href=\"#快速排序\">#</a> 快速排序</h3>\n<h4 id=\"思路-2\"><a class=\"markdownIt-Anchor\" href=\"#思路-2\">#</a> 思路</h4>\n<p>对于一个数组，先选取一个比较基准。</p>\n<p>把比基准小的数放在左边，比基准大的数放在右边。</p>\n<p>对于已经分在两侧的子数组，重复以上操作。</p>\n<h4 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">100005</span>];</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">递归的快速排序</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"keyword\">int</span> *a,<span class=\"keyword\">int</span> *b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp = *a;</span><br><span class=\"line\">    *a = *b;</span><br><span class=\"line\">    *b = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// int cnt=0;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span> *first,<span class=\"keyword\">int</span> *last)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (first == last)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> *i,*j;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *mid = first + (last - first)/<span class=\"number\">2</span>; <span class=\"comment\">// 选取中间的一个数作为比较基准</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> pivot = *mid;</span><br><span class=\"line\">    swap(mid,last<span class=\"number\">-1</span>);<span class=\"comment\">//放在最后</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j = first,i=first<span class=\"number\">-1</span>; j &lt; last; j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (*j &lt; pivot)&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            swap(i,j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    swap(last<span class=\"number\">-1</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"comment\">// printf(&quot;i:%d j:%d\\n&quot;,i-first,j-first);</span></span><br><span class=\"line\">    sort(first,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">    sort(i+<span class=\"number\">2</span>,last);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N,flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N);</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">        <span class=\"comment\">// if (a[i]&lt;a[i-1])&#123; // 判断是否已经排好序</span></span><br><span class=\"line\">        <span class=\"comment\">//     flag=1;</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (flag)&#123;</span><br><span class=\"line\">        sort(a,a+N);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "C/C++",
                "分治",
                "排序"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/10/hdu_1007/",
            "url": "http://jietmeier.xyz/2020/10/hdu_1007/",
            "title": "平面最近点对——HDU-1007",
            "date_published": "2020-10-08T03:05:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><a href=\"https://vjudge.net/problem/HDU-1007\">D - 套环游戏设计</a>  <a href=\"https://vjudge.net/problem/HDU-1007/origin\">HDU - 1007 </a></p>\n<p>你是否玩过套环游戏？套环游戏就是用环去套一些玩具，套中的玩具就作为奖励送给你。在二维平面上，每个玩具的位置是固定的，用来套环的环也是精心设计的，使得每次最多只能套中一个玩具。为了让套环游戏更有吸引力，Lucas_V 同学决定将环的半径设计的尽量最大。给定一个平面和平面上放置在固定位置的 n 个玩具，请你帮 Lucas_V 同学找到这个环的最大半径。<br>\n我们假设所有的玩具都是平面上的一个点，如果玩具到环的中心点的距离小于半径，我们就认为玩具被套中了。如果两个玩具在同一个位置，我们认为它们之间的距离为 0。</p>\n<h3 id=\"输入\"><a class=\"markdownIt-Anchor\" href=\"#输入\">#</a> 输入</h3>\n<p>输入包含若干组测试数据。对于每组测试数据，第一行是一个整数 N（2≤N≤100 000），代表平面上的所有玩具的数目；然后紧接着 N 行，每行都含有一对（x, y），表示每个玩具的具体坐标位置。输入以 N=0 结束。</p>\n<h3 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h3>\n<p>对于每组数据，输出环的最大半径，输出数据精确到小数点后 2 位。</p>\n<h3 id=\"输入样例\"><a class=\"markdownIt-Anchor\" href=\"#输入样例\">#</a> 输入样例</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">0 0</span><br><span class=\"line\">1 1</span><br><span class=\"line\">2</span><br><span class=\"line\">1 1</span><br><span class=\"line\">1 1</span><br><span class=\"line\">3</span><br><span class=\"line\">-1.5 0</span><br><span class=\"line\">0 0</span><br><span class=\"line\">0 1.5</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n<h3 id=\"输出样例\"><a class=\"markdownIt-Anchor\" href=\"#输出样例\">#</a> 输出样例</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0.71</span><br><span class=\"line\">0.00</span><br><span class=\"line\">0.75</span><br></pre></td></tr></table></figure>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h2>\n<p>这是一个求平面最近点对问题，重点学习分治思想，解决最近点对问题。</p>\n<h3 id=\"平面最近点对\"><a class=\"markdownIt-Anchor\" href=\"#平面最近点对\">#</a> 平面最近点对</h3>\n<p>平面坐标系中有 n 个点，给你这 n 个点的坐标，求出距离最近的两个点之间的距离。</p>\n<p>O (n^2) 的做法：暴力枚举两点之间的距离</p>\n<p>n 不大的情况下，复杂度为 O (n^2) 是可以接受的，但当 n 增大时，时间成本增长过快。</p>\n<p>对于所有的点来说，距离<strong>较远</strong>的两个点不可能是最近点对，在计算距离的时候，可仅考虑距离小于某个值的点。</p>\n<h4 id=\"算法思想\"><a class=\"markdownIt-Anchor\" href=\"#算法思想\">#</a> 算法思想</h4>\n<p>在平面中的点以 x 坐标升序排序，可以找到一个位于中间位置的点，把平面上的点集分为左右两个子集，记为 P、Q。</p>\n<p>要求的点对有三种可能的情况：</p>\n<p>1. 在 P 集内</p>\n<p>2. 在 Q 集内</p>\n<p>3. 两点分别在 P、Q 集</p>\n<p>分别记 P、Q 集的最近点对距离为 dist1 和 dist2</p>\n<p>记 d = min (dist1, dist2)</p>\n<p>对于 3 的情况，我们仅考虑位于左右交界处附近的点对，也就是以点 A 为分界线，两侧 x 方向上距离 &lt;=d 的范围。(图中两绿色虚线之间的绿色点)</p>\n<p><img src=\"/image/post/hdu_1007/1.png\" alt=\"img\"></p>\n<p>在这个绿色长条中再求一个最小距离 ds</p>\n<p>min (d, ds) 即全部点中的最小距离</p>\n<blockquote>\n<p>在分治的过程中，当集合中<strong>仅有两个点</strong>时，直接输出两点之间的距离，此时这个距离就是当前集合中的最近距离。</p>\n</blockquote>\n<p>计算 ds 的过程中，可以把 y 方向上的距离超过 d 的点直接忽略掉。也就是说，对于每个点仅考虑它所在的一个 d*2d 的矩形区域。</p>\n<h4 id=\"复杂度\"><a class=\"markdownIt-Anchor\" href=\"#复杂度\">#</a> 复杂度</h4>\n<p>此分治算法的复杂度为 O (nlogn)，具体证明过程参考网上的文章。<s>我不太会</s></p>\n<h3 id=\"对于本题\"><a class=\"markdownIt-Anchor\" href=\"#对于本题\">#</a> 对于本题</h3>\n<p>本题中求套环的最大半径。</p>\n<p>为了使套环每次最多只能套中一个玩具，套环的最大直径要小于最小点对的距离，即最大半径为一半的最小距离。</p>\n<p>在求得最小距离后，除 2 即答案。</p>\n<h2 id=\"代码实现\"><a class=\"markdownIt-Anchor\" href=\"#代码实现\">#</a> 代码实现</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">/*点*/</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">POS</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> x;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> y;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">POS</span> <span class=\"title\">pos</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*x方向比较函数*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp_x</span><span class=\"params\">(pos a,pos b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.x==b.x)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.y&lt;b.y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.x&lt;b.x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*y方向比较函数*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp_y</span><span class=\"params\">(pos a,pos b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.y==b.y)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.x&lt;b.x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.y&lt;b.y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*计算距离*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">dist</span><span class=\"params\">(pos *a,pos *b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sqrt</span>( <span class=\"built_in\">pow</span>(a-&gt;x-b-&gt;x,<span class=\"number\">2</span>) + <span class=\"built_in\">pow</span>(a-&gt;y-b-&gt;y,<span class=\"number\">2</span>) );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*子区域内的最小距离*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">minSubQDist</span><span class=\"params\">(pos *first, pos *last)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(last - first == <span class=\"number\">1</span>)&#123; <span class=\"comment\">// 如果区域内只有两个点，直接返回距离</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dist(first, last);   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 当区域[first,last]内的点&gt;=3时, 分治,</span></span><br><span class=\"line\">    <span class=\"comment\">// 分别求两个子区域[first,midInx],[midInx,last]内的最小值</span></span><br><span class=\"line\">    <span class=\"comment\">// 从两者中取一个最小值</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    pos *midInx = first + (last-first)/<span class=\"number\">2</span>; <span class=\"comment\">// 中间的地址</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> minDist,dist1,dist2;</span><br><span class=\"line\">    dist1 = minSubQDist(first, midInx); <span class=\"comment\">// 第一个子集</span></span><br><span class=\"line\">    dist2 = minSubQDist(midInx,last); <span class=\"comment\">// 第二个子集</span></span><br><span class=\"line\">    minDist = <span class=\"built_in\">std</span>::min(dist1,dist2); <span class=\"comment\">// 两个子集中最小值的最小值</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//// 下面找midInx在x方向小于minDist的点</span></span><br><span class=\"line\">    pos *left = midInx;</span><br><span class=\"line\">    pos *right = midInx;</span><br><span class=\"line\">    <span class=\"comment\">//前半部分</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (pos *i = first; i &lt; midInx; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i-&gt;x &gt; midInx-&gt;x - minDist)&#123;</span><br><span class=\"line\">            left = i;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//后半部分</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (pos *i = last; i &gt; midInx; i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i-&gt;x &lt; midInx-&gt;x + minDist)&#123;</span><br><span class=\"line\">            right = i;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (left!=right)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(left,right+<span class=\"number\">1</span>,cmp_y); <span class=\"comment\">// 注意std::sort和minSubQDist的第二个参数 第一遍在这里忘+1, wa了</span></span><br><span class=\"line\">        <span class=\"comment\">//枚举所有点的距离</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (pos *i = left; i &lt;= right; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (pos *j = i+<span class=\"number\">1</span>; j &lt;= right; j++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j-&gt;y - i-&gt;y &lt;= minDist)&#123;<span class=\"comment\">//y方向距离值小于mindist，计算之间的距离，并更新最小距离值mindist</span></span><br><span class=\"line\">                    minDist = <span class=\"built_in\">std</span>::min(minDist, dist(i,j));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;<span class=\"comment\">//y方向的距离已经大于等于mindist，跳出内层循环 </span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;           </span><br><span class=\"line\">        &#125;      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> minDist;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> N;</span><br><span class=\"line\">    pos a[<span class=\"number\">100005</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N) &amp;&amp; N)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf%lf&quot;</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(a,a+N,cmp_x);</span><br><span class=\"line\">        <span class=\"keyword\">double</span> d = minSubQDist(a,a+N<span class=\"number\">-1</span>);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.2lf\\n&quot;</span>,d/<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\">#</a> 参考文章</h2>\n<p><a href=\"https://blog.nowcoder.net/n/98f81764461349e4b59403228a0b7591\">[1]- 算法课 - 平面最近点对</a></p>\n<p><a href=\"https://blog.csdn.net/GGN_2015/article/details/80785621\">[2]- 平面最近点对的分治做法及其证明</a></p>\n<p><a href=\"https://oi-wiki.org/geometry/nearest-points/\">[3]- 平面最近点对</a></p>\n<p><a href=\"https://blog.csdn.net/u014296991/article/details/80908106\">[4]- 分治法解决最近点对问题</a></p>\n",
            "tags": [
                "C/C++",
                "分治"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/10/cf_599/",
            "url": "http://jietmeier.xyz/2020/10/cf_599/",
            "title": "cf_599d题解",
            "date_published": "2020-10-03T13:01:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><a href=\"https://vjudge.net/problem/CodeForces-599D\">E - Echol 和方格</a> <a href=\"https://vjudge.net/problem/CodeForces-599D/origin\">CodeForces - 599D</a></p>\n<p>给定一个整数 x，Echol 请你找出所有的整数对（n，m），使得 nm 大小的矩形刚好能有 x 个不同的正方形（正方形的边长只取正整数 1、2、3… 依次类推，并且 4 个顶点只能放置在整数坐标位置，同样大小的正方形在不同的位置算不同的正方形）。例如在一张 35 的桌子中，可以有 15 个不同的 11 大小的正方形、8 个 22 大小的正方形和 3 个 33 大小的正方形，一共有 26 个不同的正方形。</p>\n<p>在一个 1<em>2 的矩形中，含有两个 1</em>1 的正方形，所以一共有 2 个不同的正方形（下图红色表示不同的正方形）。</p>\n<p><img src=\"/image/post/cf_599/1.jpg\" alt=\"img\"></p>\n<p>在一个 2<em>3 的矩形中，含有 6 个 1</em>1 的正方形、2 个 2*2 的正方形，也就是一共由 8 个不同的正方形（下图红色表示不同的正方形）。</p>\n<p><img src=\"/image/post/cf_599/2.jpg\" alt=\"img\"></p>\n<p>现在已知一个矩形中包含一定数量的正方形，问这个矩形有多少种不同的可能。<br>\n例如，给定一个数字 2，也就是某个矩形 nm 里面只能放置 2 种不同的正方形，那么这个矩形可能的大小为 12 和 2*1，一共有 2 种不同的矩形满足条件。</p>\n<p>Input</p>\n<p>第一行包含一个整数 <em>x</em> (1 ≤ <em>x</em> ≤ 10^18) — 表示矩形中包含的正方形个数。</p>\n<p>Output</p>\n<p>输出整数 k 表示有多少种不同的矩形满足条件。<br>\n之后输出 k 对整数，每对整数描述一个矩形。按照 n 递增的顺序输出。</p>\n<p>Examples</p>\n<p>输入样例 1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">26</span><br></pre></td></tr></table></figure>\n<p>输出样例 1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">1 26</span><br><span class=\"line\">2 9</span><br><span class=\"line\">3 5</span><br><span class=\"line\">5 3</span><br><span class=\"line\">9 2</span><br><span class=\"line\">26 1</span><br></pre></td></tr></table></figure>\n<p>输入样例 2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n<p>输出样例 2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">1 2</span><br><span class=\"line\">2 1</span><br></pre></td></tr></table></figure>\n<p>输入样例 3</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8</span><br></pre></td></tr></table></figure>\n<p>输出样例 3</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">1 8</span><br><span class=\"line\">2 3</span><br><span class=\"line\">3 2</span><br><span class=\"line\">8 1</span><br></pre></td></tr></table></figure>\n<p>输入样例 4</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n<p>输出样例 4</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">1 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h2>\n<p>考虑一个 m×n 大小的矩形，内部可以有的正方形个数</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S=\\sum_{i=0}^{min(m,n)-1}(m-i)(n-i)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2386740000000005em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9610050000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.386005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">m</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>因为 m 和 n 是等价的，仅考虑 n &lt;= m 的情况，可以让计算量减小一半，则</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>≤</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S=\\sum_{i=0}^{n-1}(m-i)(n-i),(n \\leq m)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0787820000000004em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011130000000004em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>m</mi><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>+</mo><msup><mi>i</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">S=\\sum_{i=0}^{n-1}mn-i(m+n)+i^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0787820000000004em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011130000000004em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><mi>m</mi><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mfrac><mn>1</mn><mn>6</mn></mfrac><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S=mn^2-\\frac{1}{2}n(n-1)+\\frac{1}{6}n(n-1)(2n-1)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9474379999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">6</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>化简得</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mn>6</mn><mi>S</mi><mo>−</mo><msup><mi>n</mi><mn>3</mn></msup><mo>−</mo><mi>n</mi></mrow><mrow><mn>3</mn><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mn>3</mn><mi>n</mi></mrow></mfrac><mo>=</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">\\frac{6S-n^3-n}{3n^2+3n}=m\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.260438em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">3</span><span class=\"mord mathdefault\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">6</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span></span></p>\n<p>输入 s 后，从 0 开始遍历 n，直到 n&gt;m 停止，把所有 n&lt;=m，且 m 为整数的结果存入数组。</p>\n<p>后正向输出一遍，反向输出一遍</p>\n<p>注意 n=m 的情况，不要重复输出</p>\n<h2 id=\"ac代码\"><a class=\"markdownIt-Anchor\" href=\"#ac代码\">#</a> AC 代码</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll maxn = <span class=\"number\">1e7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ans</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tll n;</span><br><span class=\"line\">\tll m;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ans</span> <span class=\"title\">list</span>[<span class=\"title\">maxn</span>];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tll s,n,m,top,sub;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>,flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// float s,n,m;</span></span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld&quot;</span>,&amp;s);</span><br><span class=\"line\">\tm=s;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (n = <span class=\"number\">1</span>; n &lt;= m; n++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ttop = (<span class=\"number\">6</span>*s + n*n*n - n);</span><br><span class=\"line\">\t\tsub = (<span class=\"number\">3</span>*n*n+<span class=\"number\">3</span>*n);</span><br><span class=\"line\">\t\tm =  top/sub ;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (top%sub == <span class=\"number\">0</span> &amp;&amp; n &lt;= m)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// printf(&quot;%lld %lld\\n&quot;,n,m);</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">list</span>[cnt].m = m;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">list</span>[cnt].n = n;</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//以下输出部分</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].n == <span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].m)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tflag=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,cnt*<span class=\"number\">2</span><span class=\"number\">-1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,cnt*<span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; cnt - <span class=\"number\">1</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld %lld\\n&quot;</span>,<span class=\"built_in\">list</span>[i].n,<span class=\"built_in\">list</span>[i].m);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld %lld\\n&quot;</span>,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].n,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].m);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld %lld\\n&quot;</span>,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].n,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].m);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld %lld\\n&quot;</span>,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].m,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].n);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = cnt<span class=\"number\">-2</span>; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld %lld\\n&quot;</span>,<span class=\"built_in\">list</span>[i].m,<span class=\"built_in\">list</span>[i].n);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "数学",
                "C/C++"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/09/java/",
            "url": "http://jietmeier.xyz/2020/09/java/",
            "title": "Java一点笔记",
            "date_published": "2020-09-25T11:47:00.000Z",
            "content_html": "<h2 id=\"颜色\"><a class=\"markdownIt-Anchor\" href=\"#颜色\">#</a> 颜色</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">color</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[30;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[31;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[32;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[33;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[34;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[35;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[36;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[37;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[40;31;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[41;32;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[42;33;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[43;34;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[44;5m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[45;36;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[46;37;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\033[47;4m&quot;</span> + <span class=\"string\">&quot;test&quot;</span> + <span class=\"string\">&quot;\\033[0m&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://ascii-table.com/ansi-escape-sequences.php\">ANSI 转义序列</a></p>\n<p><a href=\"http://ascii.911cha.com/\">ASCII 码对照表</a></p>\n<p><a href=\"https://www.cnblogs.com/demonxian3/p/8963807.html\">关于 linux 特殊含义的转义符 \\033</a></p>\n<h2 id=\"声明与赋值\"><a class=\"markdownIt-Anchor\" href=\"#声明与赋值\">#</a> 声明与赋值</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">byte</span> x; <span class=\"comment\">//声明变量</span></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        byte字节型的数据范围是[-128, 127]</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">        x = <span class=\"number\">100</span>; <span class=\"comment\">//为变量赋值</span></span><br><span class=\"line\">        x = <span class=\"number\">50</span>; <span class=\"comment\">//变量可以重新赋值</span></span><br><span class=\"line\">        <span class=\"comment\">// x = x + 100; //error:50为int类型</span></span><br><span class=\"line\">        <span class=\"comment\">//x = x + (byte)50; //强制类型转换 //error:两个btye相加为int类型</span></span><br><span class=\"line\">        System.out.println(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据类型\"><a class=\"markdownIt-Anchor\" href=\"#数据类型\">#</a> 数据类型</h3>\n<h4 id=\"整数类型\"><a class=\"markdownIt-Anchor\" href=\"#整数类型\">#</a> 整数类型</h4>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>位</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>byte</td>\n<td>8</td>\n</tr>\n<tr>\n<td>short</td>\n<td>16</td>\n</tr>\n<tr>\n<td>int</td>\n<td>32</td>\n</tr>\n<tr>\n<td>long</td>\n<td>64</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"浮点类型\"><a class=\"markdownIt-Anchor\" href=\"#浮点类型\">#</a> 浮点类型</h4>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>位</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>float</td>\n<td>32</td>\n</tr>\n<tr>\n<td>double</td>\n<td>64</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"jshell\"><a class=\"markdownIt-Anchor\" href=\"#jshell\">#</a> Jshell</h2>\n<h2 id=\"运算\"><a class=\"markdownIt-Anchor\" href=\"#运算\">#</a> 运算</h2>\n<h3 id=\"算术运算符\"><a class=\"markdownIt-Anchor\" href=\"#算术运算符\">#</a> 算术运算符</h3>\n<p>表格中的实例假设整数变量 A 的值为 10，变量 B 的值为 20：</p>\n<table>\n<thead>\n<tr>\n<th>操作符</th>\n<th>描述</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+</td>\n<td>加法 - 相加运算符两侧的值</td>\n<td>A + B 等于 30</td>\n</tr>\n<tr>\n<td>-</td>\n<td>减法 - 左操作数减去右操作数</td>\n<td>A – B 等于 -10</td>\n</tr>\n<tr>\n<td>*</td>\n<td>乘法 - 相乘操作符两侧的值</td>\n<td>A * B 等于 200</td>\n</tr>\n<tr>\n<td>/</td>\n<td>除法 - 左操作数除以右操作数</td>\n<td>B / A 等于 2</td>\n</tr>\n<tr>\n<td>％</td>\n<td>取余 - 左操作数除以右操作数的余数</td>\n<td>B % A 等于 0</td>\n</tr>\n<tr>\n<td>++</td>\n<td>自增：操作数的值增加 1</td>\n<td>B++ 或 ++B 等于 21</td>\n</tr>\n<tr>\n<td>–</td>\n<td>自减：操作数的值减少 1</td>\n<td>B-- 或 --B 等于 19</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"无穷\"><a class=\"markdownIt-Anchor\" href=\"#无穷\">#</a> 无穷</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test0</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">float</span> a=<span class=\"number\">6</span>;</span><br><span class=\"line\">        System.out.print(a/<span class=\"number\">0</span>);<span class=\"comment\">//无穷</span></span><br><span class=\"line\">        System.out.print(-a/<span class=\"number\">0</span>);<span class=\"comment\">//负无穷</span></span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"keyword\">if</span> ($?) &#123; javac test0.java &#125; ; <span class=\"keyword\">if</span> ($?) &#123; java0 <span class=\"built_in\">test</span> &#125;</span><br><span class=\"line\">\tInfinity</span><br><span class=\"line\">\t-Infinity</span><br></pre></td></tr></table></figure>\n<h3 id=\"数值溢出\"><a class=\"markdownIt-Anchor\" href=\"#数值溢出\">#</a> 数值溢出</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test1</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">2147483647</span>;</span><br><span class=\"line\">        System.out.print(a+<span class=\"number\">1</span>);<span class=\"comment\">//超出数据范围</span></span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"keyword\">if</span> ($?) &#123; javac test1.java &#125; ; <span class=\"keyword\">if</span> ($?) &#123; java test1 &#125;</span><br><span class=\"line\">\t-2147483648</span><br></pre></td></tr></table></figure>\n<h2 id=\"键盘输入\"><a class=\"markdownIt-Anchor\" href=\"#键盘输入\">#</a> 键盘输入</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test2</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner stdIn = <span class=\"keyword\">new</span> Scanner(System.in);<span class=\"comment\">//实例化Scanner为stdIn, 从键盘接收数据</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> x  = stdIn.nextInt();<span class=\"comment\">//接收int类型</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(x);</span><br><span class=\"line\">        stdIn.close();</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"keyword\">if</span> ($?) &#123; javac test2.java &#125; ; <span class=\"keyword\">if</span> ($?) &#123; java test2 &#125;</span><br><span class=\"line\">\t123</span><br><span class=\"line\">\t123</span><br></pre></td></tr></table></figure>\n<h3 id=\"输入字符串\"><a class=\"markdownIt-Anchor\" href=\"#输入字符串\">#</a> 输入字符串</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = stdIn.nextLine();</span><br><span class=\"line\">String s = stdIn.next();</span><br></pre></td></tr></table></figure>\n<h3 id=\"next-与-nextline-区别\"><a class=\"markdownIt-Anchor\" href=\"#next-与-nextline-区别\">#</a> next () 与 nextLine () 区别</h3>\n<p>next():</p>\n<ul>\n<li>1、一定要读取到有效字符后才可以结束输入。</li>\n<li>2、对输入有效字符之前遇到的空白，next () 方法会自动将其去掉。</li>\n<li>3、只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li>\n<li>next () 不能得到带有空格的字符串。</li>\n</ul>\n<p>nextLine()：</p>\n<ul>\n<li>1、以 Enter 为结束符，也就是说 nextLine () 方法返回的是输入回车之前的所有字符。</li>\n<li>2、可以获得空白。</li>\n</ul>\n<h2 id=\"类型转换\"><a class=\"markdownIt-Anchor\" href=\"#类型转换\">#</a> 类型转换</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">float</span> f1 = <span class=\"number\">12.414F</span>; </span><br><span class=\"line\"><span class=\"keyword\">double</span> d1 = f1;</span><br><span class=\"line\"><span class=\"keyword\">double</span> d2 = <span class=\"number\">12.414F</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">double</span> d1 = <span class=\"number\">12.414</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> d2 = <span class=\"number\">12.414F</span>;</span><br><span class=\"line\"><span class=\"keyword\">float</span> f1 = <span class=\"number\">12.414</span>;</span><br><span class=\"line\"><span class=\"keyword\">float</span> f2 = <span class=\"number\">12.414F</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(<span class=\"number\">15</span>/<span class=\"number\">2</span>);</span><br><span class=\"line\">System.out.println((<span class=\"keyword\">double</span>)<span class=\"number\">15</span>/(<span class=\"keyword\">double</span>)<span class=\"number\">2</span>);</span><br><span class=\"line\">System.out.println(<span class=\"number\">15</span>/<span class=\"number\">2.0</span>);</span><br><span class=\"line\">System.out.println(<span class=\"number\">15f</span>/<span class=\"number\">2</span>);</span><br><span class=\"line\">System.out.println(<span class=\"number\">15f</span>/<span class=\"number\">2f</span>);</span><br><span class=\"line\">System.out.println(<span class=\"number\">15</span>/(<span class=\"keyword\">double</span>)<span class=\"number\">2</span>);</span><br><span class=\"line\">System.out.println((<span class=\"keyword\">double</span>)<span class=\"number\">15</span>/<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">//此处可用Jshell</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"四舍五入\"><a class=\"markdownIt-Anchor\" href=\"#四舍五入\">#</a> 四舍五入</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test3</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(Math.round(<span class=\"number\">1.5</span>)); <span class=\"comment\">//四舍五入</span></span><br><span class=\"line\">        System.out.println(Math.floor(<span class=\"number\">1.5</span>)); <span class=\"comment\">//向下取整</span></span><br><span class=\"line\">        System.out.println(Math.ceil(<span class=\"number\">1.5</span>)); <span class=\"comment\">//向上取整</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/09/start/",
            "url": "http://jietmeier.xyz/2020/09/start/",
            "title": "start",
            "date_published": "2020-09-24T14:21:12.000Z",
            "content_html": "<h2 id=\"hexo建博客\"><a class=\"markdownIt-Anchor\" href=\"#hexo建博客\">#</a> Hexo 建博客</h2>\n<p>曾经两度建 blog，结果都懒到荒废，最近又开始想搞了，希望这次能坚持下去…</p>\n<p>之前用的是阿里云的服务器，直接有现成的应用镜像，就直接用 WordPress 了，也省心，不用自己配置环境。</p>\n<p>这次打算用 github page+hexo</p>\n<p>想尝试尝试新东西，这次自己配置环境。</p>\n<p>还因为上学期有幸认识了一个大佬，他就是用 Hexo 做的博客</p>\n<p>搭建过程参考的别人的教程</p>\n<h3 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\">#</a> 参考文章</h3>\n<p><a href=\"https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/\">https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/35668237\">https://zhuanlan.zhihu.com/p/35668237</a></p>\n<p><a href=\"https://www.jianshu.com/p/c7397489757c\">https://www.jianshu.com/p/c7397489757c</a></p>\n",
            "tags": [
                "Hexo"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/09/hello-world/",
            "url": "http://jietmeier.xyz/2020/09/hello-world/",
            "title": "Hello World",
            "date_published": "2020-09-24T14:17:49.000Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": [
                "Hexo"
            ]
        }
    ]
}