{
    "version": "https://jsonfeed.org/version/1",
    "title": "jietmeier's blog • All posts by \"算法题解\" category",
    "description": "",
    "home_page_url": "http://jietmeier.xyz",
    "items": [
        {
            "id": "http://jietmeier.xyz/2020/10/rule/",
            "url": "http://jietmeier.xyz/2020/10/rule/",
            "title": "基础算法——尺取",
            "date_published": "2020-10-20T08:59:12.000Z",
            "content_html": "<h2 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h2>\n<p>首先，尺取法就是形如一把尺子的方法，去一块一块的截取你所需要的序列。</p>\n<blockquote>\n<p>给你一个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span>，然后给出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 个数，求这<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 个数中和大于等于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">s</span></span></span></span> 的最小连续序列。</p>\n</blockquote>\n<p>如果遍历每一种可能的序列，复杂度为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p>考虑对于整个序列，取其中一段 [l,r] 的序列</p>\n<p>如果序列满足要求，r++</p>\n<p>若不满足，l++</p>\n<p>在移动过程中记录最值</p>\n<p><img src=\"/image/post/rule/img1.png\" alt=\"img\"></p>\n<h2 id=\"代码实现\"><a class=\"markdownIt-Anchor\" href=\"#代码实现\">#</a> 代码实现</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e5</span>+<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i,t,l,r;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,s;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum,len;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[N];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;s);</span><br><span class=\"line\">        len=n+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(l=<span class=\"number\">1</span>,r=<span class=\"number\">1</span>;r&lt;=n;r++)        <span class=\"comment\">//设定左右区间初始化为1</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sum+=a[r];               <span class=\"comment\">//不断扩大右区间</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum&lt;s) <span class=\"keyword\">continue</span>;      <span class=\"comment\">//直到sum的值大于给出的s</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(sum-a[l]&gt;=s) sum-=a[l++];    <span class=\"comment\">//然后缩减区间，即扩大左区间，把 多余部分踢掉</span></span><br><span class=\"line\">                                                <span class=\"comment\">//使区间最小</span></span><br><span class=\"line\">            len=min(len,r-l+<span class=\"number\">1</span>);      <span class=\"comment\">//得到区间[l,r]，判断长度</span></span><br><span class=\"line\">        &#125;                            <span class=\"comment\">//往复</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(len==n+<span class=\"number\">1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,len);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><a href=\"https://vjudge.net/problem/CodeForces-279B#author=793437707\">Books</a> <a href=\"https://vjudge.net/problem/CodeForces-279B/origin\">CodeForces - 279B </a></p>\n<p>Bob 今天有 t 分钟的空闲时间，他来到商场准备用这些空闲时间给自己买一些衣服。<br>\n他来到一个自己经常购买的品牌店里面，店员给他推荐了 n 件衣服。我们把所有的衣服按照店员递给他的顺序从 1 到 n 编号，对于第 i 件衣服他试穿需要花掉 ai 分钟。<br>\nBob 决定随意选择从第 i 件衣服开始试穿，他会一件一件的从这件衣服开始试穿到第 n 件衣服，也就是说，他试穿完第 i 件后，紧接着会试穿第 i+1 件，然后是第 i+2 件，依此类推，直到试穿到第 n 件或者把他的空闲时间 t 用完为止。如果剩余的时间不够试穿某一件衣服，那他肯定就不会开始试穿那件衣服。<br>\n请输出 Bob 可以试穿的最多衣服数目。</p>\n<h3 id=\"输入\"><a class=\"markdownIt-Anchor\" href=\"#输入\">#</a> 输入</h3>\n<p>每组测试数据输入的第一行包含两个整数 n 和 t (1 ≤ n ≤ 10^5，1 ≤ t ≤ 10^9)，分别表示店员递给 Bob 的衣服数量和 Bob 具有的空闲时间。第二行包含 n 个整数 a1、a2、a3、…、an ( 1 ≤ ai ≤ 10^4 )，其中 ai 表示 Bob 试穿第 i 件衣服需要的时间。</p>\n<h3 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h3>\n<p>对于每组测试数据，输出 Bob 可以试穿的最多衣服数目。</p>\n<h2 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">尺取</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,t;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">100005</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>,l=<span class=\"number\">0</span>,r=<span class=\"number\">0</span>,maxn=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sum=a[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (r&lt;n)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sum&lt;=t)&#123;</span><br><span class=\"line\">            maxn = <span class=\"built_in\">std</span>::max(maxn,r-l+<span class=\"number\">1</span>);</span><br><span class=\"line\">            r++;</span><br><span class=\"line\">            sum+=a[r];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            sum-=a[l];</span><br><span class=\"line\">            l++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,maxn);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\">#</a> 参考文章</h2>\n<p><a href=\"https://cuccs.github.io/acm-wiki/basic-algorithm/two-pointers/\">https://cuccs.github.io/acm-wiki/basic-algorithm/two-pointers/</a></p>\n",
            "tags": [
                "尺取"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/10/autumnTrainingRound1/",
            "url": "http://jietmeier.xyz/2020/10/autumnTrainingRound1/",
            "title": "秋季训练——round1",
            "date_published": "2020-10-15T09:05:00.000Z",
            "content_html": "<h2 id=\"我太菜了\"><a class=\"markdownIt-Anchor\" href=\"#我太菜了\">#</a> 我太菜了</h2>\n<p>第一次跟 ACM 新生队打训练赛，感觉自己之前白学了。</p>\n<p>前四题是熟悉输入输出的，<s>纯考验敲代码速度</s>，没有抢到一血，可惜了</p>\n<p>E 题最开始看起来难得没法做，后来换题了。</p>\n<p>E、F、H、I、J 五个题按说都应该能做出来，写 I 题的时候脑抽了，浪费了近 1 小时。导致后来 E 也没时间做了。</p>\n<p>G 是一个脑筋急转弯的题，不过还真有人能猜出来 2333</p>\n<p><strong>心态很重要</strong></p>\n<p>按照做题顺序分析一下后面几个题</p>\n<h2 id=\"f-new-year-garland\"><a class=\"markdownIt-Anchor\" href=\"#f-new-year-garland\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1279A\">F - New Year Garland</a></h2>\n<h3 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h3>\n<p>三个颜色的珠子排起来，想要相邻珠子不同色，那么个数最多的珠子不能超过<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>n</mi><mn>2</mn></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\frac{n}{2}+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.040392em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.695392em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个。</p>\n<p>判断较少的两个和大于等于较大的 - 1 即可 (类似于三角不等式)。</p>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,i,a[<span class=\"number\">5</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>,&amp;a[<span class=\"number\">0</span>],&amp;a[<span class=\"number\">1</span>],&amp;a[<span class=\"number\">2</span>]);</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(a,a+<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a[<span class=\"number\">0</span>]+a[<span class=\"number\">1</span>]&gt;=a[<span class=\"number\">2</span>]<span class=\"number\">-1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Yes\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;No\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"h-number-of-apartments\"><a class=\"markdownIt-Anchor\" href=\"#h-number-of-apartments\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1430A\">H - Number of Apartments</a></h2>\n<h3 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\">#</a> 分析</h3>\n<p>共有三种公寓：3 窗、5 窗、7 窗</p>\n<p>给定一个窗户数，找到一组符合的公寓数。</p>\n<p>鉴于数据量很小，直接暴力</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t, n, sum,flag;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; t; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> a = <span class=\"number\">0</span>; a*<span class=\"number\">3</span> &lt;= n; a++)&#123;</span><br><span class=\"line\">            sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> b = <span class=\"number\">0</span>; b*<span class=\"number\">5</span> &lt;= n; b++)&#123;</span><br><span class=\"line\">                sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">                flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> c = <span class=\"number\">0</span>; sum &lt;= n; c++)&#123;</span><br><span class=\"line\">                    sum=(<span class=\"number\">3</span>*a + <span class=\"number\">5</span>*b + <span class=\"number\">7</span>*c);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (sum == n)&#123;</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d %d\\n&quot;</span>,a,b,c);</span><br><span class=\"line\">                        flag =<span class=\"number\">1</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;               </span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (flag) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (flag) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!flag) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-1\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"i-barrels\"><a class=\"markdownIt-Anchor\" href=\"#i-barrels\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1430B\">I - Barrels</a></h2>\n<h3 id=\"分析-3\"><a class=\"markdownIt-Anchor\" href=\"#分析-3\">#</a> 分析</h3>\n<p>给了一排水桶，初始盛有水。每次操作可以把水从一个桶倒进另一个桶。</p>\n<p>桶容量无限大，求在 k 次操作之后，水量可能的最大差值。</p>\n<p>想要让差值最大，那么要使最多水的桶里的水尽可能多（全往这里边倒），使最少水的桶里的水尽可能少（空桶）。</p>\n<p>那么先把初始水量排序</p>\n<p>从第二多的桶开始，往水最多的桶里倒。</p>\n<p>由于至少操作一次，最大的水量就是要求的最大差值。</p>\n<p>如果只有一个桶，那么无法操作，差值为 0。</p>\n<h3 id=\"代码-3\"><a class=\"markdownIt-Anchor\" href=\"#代码-3\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,k;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a[<span class=\"number\">200005</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(a,a+n);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;0\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> inx=n<span class=\"number\">-2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; i++)&#123;</span><br><span class=\"line\">            a[n<span class=\"number\">-1</span>]+=a[inx];</span><br><span class=\"line\">            inx--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>,a[n<span class=\"number\">-1</span>]);  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"j-numbers-on-whiteboard\"><a class=\"markdownIt-Anchor\" href=\"#j-numbers-on-whiteboard\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1430C\">J - Numbers on Whiteboard</a></h2>\n<h3 id=\"分析-4\"><a class=\"markdownIt-Anchor\" href=\"#分析-4\">#</a> 分析</h3>\n<p>要使结果尽可能小，那么经过每一次操作之后的数字要尽可能小。</p>\n<p>当 a+b 为奇数时，除二之后四舍五入会使结果变大。</p>\n<p>所以 a+b 只能为偶数。</p>\n<p>每次取最大的两个数。</p>\n<p>循环操作下去，发现只有第二次取得两个数相等，其他的差全为 2，且每次 - 1</p>\n<p>最后理想的结果应该是 2</p>\n<p>对于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n=2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 的情况单独判断</p>\n<h3 id=\"代码-4\"><a class=\"markdownIt-Anchor\" href=\"#代码-4\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t, n, inx,i,a[<span class=\"number\">200005</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;2\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1 2\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d\\n&quot;</span>,n<span class=\"number\">-2</span>,n);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d\\n&quot;</span>,n<span class=\"number\">-1</span>,n<span class=\"number\">-1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n<span class=\"number\">-3</span>; i &gt;= <span class=\"number\">1</span>; i--)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d\\n&quot;</span>,i,i+<span class=\"number\">2</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"g-neat-words\"><a class=\"markdownIt-Anchor\" href=\"#g-neat-words\">#</a> <a href=\"https://vjudge.net/problem/CodeForces-1145F\">G - Neat Words</a></h2>\n<h3 id=\"分析-5\"><a class=\"markdownIt-Anchor\" href=\"#分析-5\">#</a> 分析</h3>\n<p>整洁的单词</p>\n<p>整洁指的是，如果一个单词里的字母全都是直的 or 全都是弯的，那么它就是整洁的。</p>\n<p>比如</p>\n<p>CUC，字母全都是弯的，它就是整洁的。</p>\n<p>NEAT，字母全都是直的，它就是整洁的。</p>\n<p>YES，字母有弯有直，它就不整洁。</p>\n<p>缺乏想象力，反正我是没猜出来。。。</p>\n<p>那么只需要一个长度为 26 的 bool 数组就能解决了，分别对应 26 个字母的直 or 弯</p>\n<p><strong><s>直的是 1，弯的是 0</s></strong></p>\n<p>验证字母的状态是否相同</p>\n<h3 id=\"代码-5\"><a class=\"markdownIt-Anchor\" href=\"#代码-5\">#</a> 代码</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">26</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;,flag,ans=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> w[<span class=\"number\">15</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,w);</span><br><span class=\"line\">    flag = a[w[<span class=\"number\">0</span>]<span class=\"number\">-65</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;w[i]!=<span class=\"string\">&#x27;\\0&#x27;</span>; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a[w[i]<span class=\"number\">-65</span>]!=flag)&#123;</span><br><span class=\"line\">            ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ans) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;YES\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;NO\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "C/C++",
                "ACM新生队"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/10/sort/",
            "url": "http://jietmeier.xyz/2020/10/sort/",
            "title": "排序算法",
            "date_published": "2020-10-13T05:28:00.000Z",
            "content_html": "<h3 id=\"归并排序\"><a class=\"markdownIt-Anchor\" href=\"#归并排序\">#</a> 归并排序</h3>\n<h4 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h4>\n<p>对于一个长度为 n 的数组，先分成两个长度为 n/2 的子数组，对于两个数组分别排序，排好序后再合并。</p>\n<h4 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">递归的归并排序</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">100005</span>];</span><br><span class=\"line\"><span class=\"comment\">// int cnt=0;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span> *first, <span class=\"keyword\">int</span> *last)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *midInx=first + (last-first)/<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *i,*j,flag,iFull;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *tempArray = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[last-first+<span class=\"number\">1</span>]; <span class=\"comment\">// 开一个临时数组</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (last!=first)&#123; <span class=\"comment\">// 当序列中超过1个数时↓       </span></span><br><span class=\"line\">        <span class=\"comment\">// 分成两个子序列,分别对两个子序列排序</span></span><br><span class=\"line\">        sort(first,midInx);</span><br><span class=\"line\">        sort(midInx+<span class=\"number\">1</span>,last);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//合并两个子序列↓</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = first, j = midInx+<span class=\"number\">1</span>, flag=<span class=\"number\">0</span>; i &lt;= midInx &amp;&amp; j &lt;= last; flag++)&#123; </span><br><span class=\"line\">        <span class=\"comment\">// 较小的数装入tempArray，地址自增</span></span><br><span class=\"line\">        *(tempArray+flag)=*i&lt;*j?*i++:*j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    iFull=i==midInx+<span class=\"number\">1</span>?<span class=\"number\">1</span>:<span class=\"number\">0</span>; <span class=\"comment\">// 标记i是否出界</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (flag&lt;=last-first)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 把剩下的数装入tempArray</span></span><br><span class=\"line\">        *(tempArray+flag++)=iFull?*j++:*i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = first,j=tempArray; i &lt;= last; i++,j++)&#123; <span class=\"comment\">// 把tempArray中的数copy到[first, last]中</span></span><br><span class=\"line\">        *i=*j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> []tempArray;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(a,a+N<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N<span class=\"number\">-1</span>; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,a[N<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"快速排序\"><a class=\"markdownIt-Anchor\" href=\"#快速排序\">#</a> 快速排序</h3>\n<h4 id=\"思路-2\"><a class=\"markdownIt-Anchor\" href=\"#思路-2\">#</a> 思路</h4>\n<p>对于一个数组，先选取一个比较基准。</p>\n<p>把比基准小的数放在左边，比基准大的数放在右边。</p>\n<p>对于已经分在两侧的子数组，重复以上操作。</p>\n<h4 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">100005</span>];</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">递归的快速排序</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"keyword\">int</span> *a,<span class=\"keyword\">int</span> *b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp = *a;</span><br><span class=\"line\">    *a = *b;</span><br><span class=\"line\">    *b = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// int cnt=0;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span> *first,<span class=\"keyword\">int</span> *last)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (first == last)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> *i,*j;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *mid = first + (last - first)/<span class=\"number\">2</span>; <span class=\"comment\">// 选取中间的一个数作为比较基准</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> pivot = *mid;</span><br><span class=\"line\">    swap(mid,last<span class=\"number\">-1</span>);<span class=\"comment\">//放在最后</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j = first,i=first<span class=\"number\">-1</span>; j &lt; last; j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (*j &lt; pivot)&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            swap(i,j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    swap(last<span class=\"number\">-1</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"comment\">// printf(&quot;i:%d j:%d\\n&quot;,i-first,j-first);</span></span><br><span class=\"line\">    sort(first,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">    sort(i+<span class=\"number\">2</span>,last);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N,flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N);</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">        <span class=\"comment\">// if (a[i]&lt;a[i-1])&#123; // 判断是否已经排好序</span></span><br><span class=\"line\">        <span class=\"comment\">//     flag=1;</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (flag)&#123;</span><br><span class=\"line\">        sort(a,a+N);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "C/C++",
                "分治",
                "排序"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/10/hdu_1007/",
            "url": "http://jietmeier.xyz/2020/10/hdu_1007/",
            "title": "平面最近点对——HDU-1007",
            "date_published": "2020-10-08T03:05:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><a href=\"https://vjudge.net/problem/HDU-1007\">D - 套环游戏设计</a>  <a href=\"https://vjudge.net/problem/HDU-1007/origin\">HDU - 1007 </a></p>\n<p>你是否玩过套环游戏？套环游戏就是用环去套一些玩具，套中的玩具就作为奖励送给你。在二维平面上，每个玩具的位置是固定的，用来套环的环也是精心设计的，使得每次最多只能套中一个玩具。为了让套环游戏更有吸引力，Lucas_V 同学决定将环的半径设计的尽量最大。给定一个平面和平面上放置在固定位置的 n 个玩具，请你帮 Lucas_V 同学找到这个环的最大半径。<br>\n我们假设所有的玩具都是平面上的一个点，如果玩具到环的中心点的距离小于半径，我们就认为玩具被套中了。如果两个玩具在同一个位置，我们认为它们之间的距离为 0。</p>\n<h3 id=\"输入\"><a class=\"markdownIt-Anchor\" href=\"#输入\">#</a> 输入</h3>\n<p>输入包含若干组测试数据。对于每组测试数据，第一行是一个整数 N（2≤N≤100 000），代表平面上的所有玩具的数目；然后紧接着 N 行，每行都含有一对（x, y），表示每个玩具的具体坐标位置。输入以 N=0 结束。</p>\n<h3 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h3>\n<p>对于每组数据，输出环的最大半径，输出数据精确到小数点后 2 位。</p>\n<h3 id=\"输入样例\"><a class=\"markdownIt-Anchor\" href=\"#输入样例\">#</a> 输入样例</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">0 0</span><br><span class=\"line\">1 1</span><br><span class=\"line\">2</span><br><span class=\"line\">1 1</span><br><span class=\"line\">1 1</span><br><span class=\"line\">3</span><br><span class=\"line\">-1.5 0</span><br><span class=\"line\">0 0</span><br><span class=\"line\">0 1.5</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n<h3 id=\"输出样例\"><a class=\"markdownIt-Anchor\" href=\"#输出样例\">#</a> 输出样例</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0.71</span><br><span class=\"line\">0.00</span><br><span class=\"line\">0.75</span><br></pre></td></tr></table></figure>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h2>\n<p>这是一个求平面最近点对问题，重点学习分治思想，解决最近点对问题。</p>\n<h3 id=\"平面最近点对\"><a class=\"markdownIt-Anchor\" href=\"#平面最近点对\">#</a> 平面最近点对</h3>\n<p>平面坐标系中有 n 个点，给你这 n 个点的坐标，求出距离最近的两个点之间的距离。</p>\n<p>O (n^2) 的做法：暴力枚举两点之间的距离</p>\n<p>n 不大的情况下，复杂度为 O (n^2) 是可以接受的，但当 n 增大时，时间成本增长过快。</p>\n<p>对于所有的点来说，距离<strong>较远</strong>的两个点不可能是最近点对，在计算距离的时候，可仅考虑距离小于某个值的点。</p>\n<h4 id=\"算法思想\"><a class=\"markdownIt-Anchor\" href=\"#算法思想\">#</a> 算法思想</h4>\n<p>在平面中的点以 x 坐标升序排序，可以找到一个位于中间位置的点，把平面上的点集分为左右两个子集，记为 P、Q。</p>\n<p>要求的点对有三种可能的情况：</p>\n<p>1. 在 P 集内</p>\n<p>2. 在 Q 集内</p>\n<p>3. 两点分别在 P、Q 集</p>\n<p>分别记 P、Q 集的最近点对距离为 dist1 和 dist2</p>\n<p>记 d = min (dist1, dist2)</p>\n<p>对于 3 的情况，我们仅考虑位于左右交界处附近的点对，也就是以点 A 为分界线，两侧 x 方向上距离 &lt;=d 的范围。(图中两绿色虚线之间的绿色点)</p>\n<p><img src=\"/image/post/hdu_1007/1.png\" alt=\"img\"></p>\n<p>在这个绿色长条中再求一个最小距离 ds</p>\n<p>min (d, ds) 即全部点中的最小距离</p>\n<blockquote>\n<p>在分治的过程中，当集合中<strong>仅有两个点</strong>时，直接输出两点之间的距离，此时这个距离就是当前集合中的最近距离。</p>\n</blockquote>\n<p>计算 ds 的过程中，可以把 y 方向上的距离超过 d 的点直接忽略掉。也就是说，对于每个点仅考虑它所在的一个 d*2d 的矩形区域。</p>\n<h4 id=\"复杂度\"><a class=\"markdownIt-Anchor\" href=\"#复杂度\">#</a> 复杂度</h4>\n<p>此分治算法的复杂度为 O (nlogn)，具体证明过程参考网上的文章。<s>我不太会</s></p>\n<h3 id=\"对于本题\"><a class=\"markdownIt-Anchor\" href=\"#对于本题\">#</a> 对于本题</h3>\n<p>本题中求套环的最大半径。</p>\n<p>为了使套环每次最多只能套中一个玩具，套环的最大直径要小于最小点对的距离，即最大半径为一半的最小距离。</p>\n<p>在求得最小距离后，除 2 即答案。</p>\n<h2 id=\"代码实现\"><a class=\"markdownIt-Anchor\" href=\"#代码实现\">#</a> 代码实现</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">/*点*/</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">POS</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> x;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> y;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">POS</span> <span class=\"title\">pos</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*x方向比较函数*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp_x</span><span class=\"params\">(pos a,pos b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.x==b.x)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.y&lt;b.y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.x&lt;b.x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*y方向比较函数*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp_y</span><span class=\"params\">(pos a,pos b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.y==b.y)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.x&lt;b.x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.y&lt;b.y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*计算距离*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">dist</span><span class=\"params\">(pos *a,pos *b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sqrt</span>( <span class=\"built_in\">pow</span>(a-&gt;x-b-&gt;x,<span class=\"number\">2</span>) + <span class=\"built_in\">pow</span>(a-&gt;y-b-&gt;y,<span class=\"number\">2</span>) );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*子区域内的最小距离*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">minSubQDist</span><span class=\"params\">(pos *first, pos *last)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(last - first == <span class=\"number\">1</span>)&#123; <span class=\"comment\">// 如果区域内只有两个点，直接返回距离</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dist(first, last);   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 当区域[first,last]内的点&gt;=3时, 分治,</span></span><br><span class=\"line\">    <span class=\"comment\">// 分别求两个子区域[first,midInx],[midInx,last]内的最小值</span></span><br><span class=\"line\">    <span class=\"comment\">// 从两者中取一个最小值</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    pos *midInx = first + (last-first)/<span class=\"number\">2</span>; <span class=\"comment\">// 中间的地址</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> minDist,dist1,dist2;</span><br><span class=\"line\">    dist1 = minSubQDist(first, midInx); <span class=\"comment\">// 第一个子集</span></span><br><span class=\"line\">    dist2 = minSubQDist(midInx,last); <span class=\"comment\">// 第二个子集</span></span><br><span class=\"line\">    minDist = <span class=\"built_in\">std</span>::min(dist1,dist2); <span class=\"comment\">// 两个子集中最小值的最小值</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//// 下面找midInx在x方向小于minDist的点</span></span><br><span class=\"line\">    pos *left = midInx;</span><br><span class=\"line\">    pos *right = midInx;</span><br><span class=\"line\">    <span class=\"comment\">//前半部分</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (pos *i = first; i &lt; midInx; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i-&gt;x &gt; midInx-&gt;x - minDist)&#123;</span><br><span class=\"line\">            left = i;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//后半部分</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (pos *i = last; i &gt; midInx; i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i-&gt;x &lt; midInx-&gt;x + minDist)&#123;</span><br><span class=\"line\">            right = i;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (left!=right)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(left,right+<span class=\"number\">1</span>,cmp_y); <span class=\"comment\">// 注意std::sort和minSubQDist的第二个参数 第一遍在这里忘+1, wa了</span></span><br><span class=\"line\">        <span class=\"comment\">//枚举所有点的距离</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (pos *i = left; i &lt;= right; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (pos *j = i+<span class=\"number\">1</span>; j &lt;= right; j++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j-&gt;y - i-&gt;y &lt;= minDist)&#123;<span class=\"comment\">//y方向距离值小于mindist，计算之间的距离，并更新最小距离值mindist</span></span><br><span class=\"line\">                    minDist = <span class=\"built_in\">std</span>::min(minDist, dist(i,j));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;<span class=\"comment\">//y方向的距离已经大于等于mindist，跳出内层循环 </span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;           </span><br><span class=\"line\">        &#125;      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> minDist;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> N;</span><br><span class=\"line\">    pos a[<span class=\"number\">100005</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N) &amp;&amp; N)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf%lf&quot;</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::sort(a,a+N,cmp_x);</span><br><span class=\"line\">        <span class=\"keyword\">double</span> d = minSubQDist(a,a+N<span class=\"number\">-1</span>);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.2lf\\n&quot;</span>,d/<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\">#</a> 参考文章</h2>\n<p><a href=\"https://blog.nowcoder.net/n/98f81764461349e4b59403228a0b7591\">[1]- 算法课 - 平面最近点对</a></p>\n<p><a href=\"https://blog.csdn.net/GGN_2015/article/details/80785621\">[2]- 平面最近点对的分治做法及其证明</a></p>\n<p><a href=\"https://oi-wiki.org/geometry/nearest-points/\">[3]- 平面最近点对</a></p>\n<p><a href=\"https://blog.csdn.net/u014296991/article/details/80908106\">[4]- 分治法解决最近点对问题</a></p>\n",
            "tags": [
                "C/C++",
                "分治"
            ]
        },
        {
            "id": "http://jietmeier.xyz/2020/10/cf_599/",
            "url": "http://jietmeier.xyz/2020/10/cf_599/",
            "title": "cf_599d题解",
            "date_published": "2020-10-03T13:01:00.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p><a href=\"https://vjudge.net/problem/CodeForces-599D\">E - Echol 和方格</a> <a href=\"https://vjudge.net/problem/CodeForces-599D/origin\">CodeForces - 599D</a></p>\n<p>给定一个整数 x，Echol 请你找出所有的整数对（n，m），使得 nm 大小的矩形刚好能有 x 个不同的正方形（正方形的边长只取正整数 1、2、3… 依次类推，并且 4 个顶点只能放置在整数坐标位置，同样大小的正方形在不同的位置算不同的正方形）。例如在一张 35 的桌子中，可以有 15 个不同的 11 大小的正方形、8 个 22 大小的正方形和 3 个 33 大小的正方形，一共有 26 个不同的正方形。</p>\n<p>在一个 1<em>2 的矩形中，含有两个 1</em>1 的正方形，所以一共有 2 个不同的正方形（下图红色表示不同的正方形）。</p>\n<p><img src=\"/image/post/cf_599/1.jpg\" alt=\"img\"></p>\n<p>在一个 2<em>3 的矩形中，含有 6 个 1</em>1 的正方形、2 个 2*2 的正方形，也就是一共由 8 个不同的正方形（下图红色表示不同的正方形）。</p>\n<p><img src=\"/image/post/cf_599/2.jpg\" alt=\"img\"></p>\n<p>现在已知一个矩形中包含一定数量的正方形，问这个矩形有多少种不同的可能。<br>\n例如，给定一个数字 2，也就是某个矩形 nm 里面只能放置 2 种不同的正方形，那么这个矩形可能的大小为 12 和 2*1，一共有 2 种不同的矩形满足条件。</p>\n<p>Input</p>\n<p>第一行包含一个整数 <em>x</em> (1 ≤ <em>x</em> ≤ 10^18) — 表示矩形中包含的正方形个数。</p>\n<p>Output</p>\n<p>输出整数 k 表示有多少种不同的矩形满足条件。<br>\n之后输出 k 对整数，每对整数描述一个矩形。按照 n 递增的顺序输出。</p>\n<p>Examples</p>\n<p>输入样例 1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">26</span><br></pre></td></tr></table></figure>\n<p>输出样例 1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">1 26</span><br><span class=\"line\">2 9</span><br><span class=\"line\">3 5</span><br><span class=\"line\">5 3</span><br><span class=\"line\">9 2</span><br><span class=\"line\">26 1</span><br></pre></td></tr></table></figure>\n<p>输入样例 2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n<p>输出样例 2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">1 2</span><br><span class=\"line\">2 1</span><br></pre></td></tr></table></figure>\n<p>输入样例 3</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8</span><br></pre></td></tr></table></figure>\n<p>输出样例 3</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">1 8</span><br><span class=\"line\">2 3</span><br><span class=\"line\">3 2</span><br><span class=\"line\">8 1</span><br></pre></td></tr></table></figure>\n<p>输入样例 4</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n<p>输出样例 4</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">1 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h2>\n<p>考虑一个 m×n 大小的矩形，内部可以有的正方形个数</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S=\\sum_{i=0}^{min(m,n)-1}(m-i)(n-i)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2386740000000005em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9610050000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.386005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">m</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>因为 m 和 n 是等价的，仅考虑 n &lt;= m 的情况，可以让计算量减小一半，则</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>≤</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S=\\sum_{i=0}^{n-1}(m-i)(n-i),(n \\leq m)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0787820000000004em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011130000000004em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>m</mi><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>+</mo><msup><mi>i</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">S=\\sum_{i=0}^{n-1}mn-i(m+n)+i^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0787820000000004em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011130000000004em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><mi>m</mi><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mfrac><mn>1</mn><mn>6</mn></mfrac><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S=mn^2-\\frac{1}{2}n(n-1)+\\frac{1}{6}n(n-1)(2n-1)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9474379999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">6</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>化简得</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mn>6</mn><mi>S</mi><mo>−</mo><msup><mi>n</mi><mn>3</mn></msup><mo>−</mo><mi>n</mi></mrow><mrow><mn>3</mn><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mn>3</mn><mi>n</mi></mrow></mfrac><mo>=</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">\\frac{6S-n^3-n}{3n^2+3n}=m\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.260438em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">3</span><span class=\"mord mathdefault\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">6</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span></span></p>\n<p>输入 s 后，从 0 开始遍历 n，直到 n&gt;m 停止，把所有 n&lt;=m，且 m 为整数的结果存入数组。</p>\n<p>后正向输出一遍，反向输出一遍</p>\n<p>注意 n=m 的情况，不要重复输出</p>\n<h2 id=\"ac代码\"><a class=\"markdownIt-Anchor\" href=\"#ac代码\">#</a> AC 代码</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll maxn = <span class=\"number\">1e7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ans</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tll n;</span><br><span class=\"line\">\tll m;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ans</span> <span class=\"title\">list</span>[<span class=\"title\">maxn</span>];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tll s,n,m,top,sub;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>,flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// float s,n,m;</span></span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld&quot;</span>,&amp;s);</span><br><span class=\"line\">\tm=s;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (n = <span class=\"number\">1</span>; n &lt;= m; n++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ttop = (<span class=\"number\">6</span>*s + n*n*n - n);</span><br><span class=\"line\">\t\tsub = (<span class=\"number\">3</span>*n*n+<span class=\"number\">3</span>*n);</span><br><span class=\"line\">\t\tm =  top/sub ;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (top%sub == <span class=\"number\">0</span> &amp;&amp; n &lt;= m)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// printf(&quot;%lld %lld\\n&quot;,n,m);</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">list</span>[cnt].m = m;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">list</span>[cnt].n = n;</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//以下输出部分</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].n == <span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].m)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tflag=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,cnt*<span class=\"number\">2</span><span class=\"number\">-1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,cnt*<span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; cnt - <span class=\"number\">1</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld %lld\\n&quot;</span>,<span class=\"built_in\">list</span>[i].n,<span class=\"built_in\">list</span>[i].m);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld %lld\\n&quot;</span>,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].n,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].m);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld %lld\\n&quot;</span>,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].n,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].m);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld %lld\\n&quot;</span>,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].m,<span class=\"built_in\">list</span>[cnt<span class=\"number\">-1</span>].n);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = cnt<span class=\"number\">-2</span>; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld %lld\\n&quot;</span>,<span class=\"built_in\">list</span>[i].m,<span class=\"built_in\">list</span>[i].n);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "数学",
                "C/C++"
            ]
        }
    ]
}